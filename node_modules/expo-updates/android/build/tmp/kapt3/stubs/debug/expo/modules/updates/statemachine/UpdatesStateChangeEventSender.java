package expo.modules.updates.statemachine;

import java.lang.System;

/**
 * Protocol with a method for sending state change events to JS.
 * In production, this is implemented by the UpdatesController singleton.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u001c\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J\u0018\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u0007H&\u00a8\u0006\b"}, d2 = {"Lexpo/modules/updates/statemachine/UpdatesStateChangeEventSender;", "", "sendUpdateStateChangeEventToBridge", "", "eventType", "Lexpo/modules/updates/statemachine/UpdatesStateEventType;", "context", "Lexpo/modules/updates/statemachine/UpdatesStateContext;", "expo-updates_debug"})
public abstract interface UpdatesStateChangeEventSender {
    
    public abstract void sendUpdateStateChangeEventToBridge(@org.jetbrains.annotations.NotNull
    expo.modules.updates.statemachine.UpdatesStateEventType eventType, @org.jetbrains.annotations.NotNull
    expo.modules.updates.statemachine.UpdatesStateContext context);
}
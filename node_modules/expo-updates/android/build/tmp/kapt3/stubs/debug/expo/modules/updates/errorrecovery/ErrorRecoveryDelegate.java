package expo.modules.updates.errorrecovery;

import java.lang.System;

/**
 * Interface for a delegate that will execute the actions prescribed by the error recovery
 * pipeline. Implemented by [UpdatesController].
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u00008\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\bf\u0018\u00002\u00020\u0001:\u0001\u0013J\b\u0010\u0002\u001a\u00020\u0003H&J\b\u0010\u0004\u001a\u00020\u0005H&J\b\u0010\u0006\u001a\u00020\u0007H&J\b\u0010\b\u001a\u00020\tH&J\b\u0010\n\u001a\u00020\tH&J\b\u0010\u000b\u001a\u00020\tH&J\u0010\u0010\f\u001a\u00020\t2\u0006\u0010\r\u001a\u00020\u000eH&J\u0014\u0010\u000f\u001a\u00020\t2\n\u0010\u0010\u001a\u00060\u0011j\u0002`\u0012H&\u00a8\u0006\u0014"}, d2 = {"Lexpo/modules/updates/errorrecovery/ErrorRecoveryDelegate;", "", "getCheckAutomaticallyConfiguration", "Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "getLaunchedUpdateSuccessfulLaunchCount", "", "getRemoteLoadStatus", "Lexpo/modules/updates/errorrecovery/ErrorRecoveryDelegate$RemoteLoadStatus;", "loadRemoteUpdate", "", "markFailedLaunchForLaunchedUpdate", "markSuccessfulLaunchForLaunchedUpdate", "relaunch", "callback", "Lexpo/modules/updates/launcher/Launcher$LauncherCallback;", "throwException", "exception", "Ljava/lang/Exception;", "Lkotlin/Exception;", "RemoteLoadStatus", "expo-updates_debug"})
public abstract interface ErrorRecoveryDelegate {
    
    public abstract void loadRemoteUpdate();
    
    public abstract void relaunch(@org.jetbrains.annotations.NotNull
    expo.modules.updates.launcher.Launcher.LauncherCallback callback);
    
    public abstract void throwException(@org.jetbrains.annotations.NotNull
    java.lang.Exception exception);
    
    public abstract void markFailedLaunchForLaunchedUpdate();
    
    public abstract void markSuccessfulLaunchForLaunchedUpdate();
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.errorrecovery.ErrorRecoveryDelegate.RemoteLoadStatus getRemoteLoadStatus();
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration getCheckAutomaticallyConfiguration();
    
    public abstract int getLaunchedUpdateSuccessfulLaunchCount();
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0005\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/errorrecovery/ErrorRecoveryDelegate$RemoteLoadStatus;", "", "(Ljava/lang/String;I)V", "IDLE", "NEW_UPDATE_LOADING", "NEW_UPDATE_LOADED", "expo-updates_debug"})
    public static enum RemoteLoadStatus {
        /*public static final*/ IDLE /* = new IDLE() */,
        /*public static final*/ NEW_UPDATE_LOADING /* = new NEW_UPDATE_LOADING() */,
        /*public static final*/ NEW_UPDATE_LOADED /* = new NEW_UPDATE_LOADED() */;
        
        RemoteLoadStatus() {
        }
    }
}
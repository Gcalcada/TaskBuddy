package expo.modules.updates.selectionpolicy;

import java.lang.System;

/**
 * ReaperSelectionPolicy which keeps a predefined maximum number of updates across all scopes, and,
 * once that number is surpassed, selects the updates least recently accessed (and then least
 * recently published) to delete. Ignores filters and scopes.
 *
 * Uses the `lastAccessed` property to determine ordering of updates.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000$\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\u0018\u00002\u00020\u0001B\u0011\b\u0007\u0012\b\b\u0002\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J0\u0010\u0005\u001a\b\u0012\u0004\u0012\u00020\u00070\u00062\f\u0010\b\u001a\b\u0012\u0004\u0012\u00020\u00070\u00062\b\u0010\t\u001a\u0004\u0018\u00010\u00072\b\u0010\n\u001a\u0004\u0018\u00010\u000bH\u0016R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicyDevelopmentClient;", "Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicy;", "maxUpdatesToKeep", "", "(I)V", "selectUpdatesToDelete", "", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updates", "launchedUpdate", "filters", "Lorg/json/JSONObject;", "expo-updates_debug"})
public final class ReaperSelectionPolicyDevelopmentClient implements expo.modules.updates.selectionpolicy.ReaperSelectionPolicy {
    private final int maxUpdatesToKeep = 0;
    
    @kotlin.jvm.JvmOverloads
    public ReaperSelectionPolicyDevelopmentClient() {
        super();
    }
    
    @kotlin.jvm.JvmOverloads
    public ReaperSelectionPolicyDevelopmentClient(int maxUpdatesToKeep) {
        super();
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.util.List<expo.modules.updates.db.entity.UpdateEntity> selectUpdatesToDelete(@org.jetbrains.annotations.NotNull
    java.util.List<expo.modules.updates.db.entity.UpdateEntity> updates, @org.jetbrains.annotations.Nullable
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.Nullable
    org.json.JSONObject filters) {
        return null;
    }
}
package expo.modules.updates.logging;

import java.lang.System;

/**
 * Class for reading expo-updates logs
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000P\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\u0018\u0000 \u001c2\u00020\u0001:\u0001\u001cB\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\u0010\u0010\u0007\u001a\u00020\b2\u0006\u0010\t\u001a\u00020\nH\u0002J\u0014\u0010\u000b\u001a\b\u0012\u0004\u0012\u00020\r0\f2\u0006\u0010\u000e\u001a\u00020\nJ\u0018\u0010\u000f\u001a\u00020\u00102\u0006\u0010\u0011\u001a\u00020\r2\u0006\u0010\u0012\u001a\u00020\bH\u0002J5\u0010\u0013\u001a\u00020\u00142\b\b\u0002\u0010\u0015\u001a\u00020\n2#\u0010\u0016\u001a\u001f\u0012\u0015\u0012\u0013\u0018\u00010\u0018\u00a2\u0006\f\b\u0019\u0012\b\b\u001a\u0012\u0004\b\b(\u001b\u0012\u0004\u0012\u00020\u00140\u0017R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u001d"}, d2 = {"Lexpo/modules/updates/logging/UpdatesLogReader;", "", "context", "Landroid/content/Context;", "(Landroid/content/Context;)V", "persistentLog", "Lexpo/modules/core/logging/PersistentFileLog;", "epochFromDateOrOneDayAgo", "", "date", "Ljava/util/Date;", "getLogEntries", "", "", "newerThan", "isEntryStringLaterThanTimestamp", "", "entryString", "timestamp", "purgeLogEntries", "", "olderThan", "completionHandler", "Lkotlin/Function1;", "Ljava/lang/Error;", "Lkotlin/ParameterName;", "name", "_", "Companion", "expo-updates_debug"})
public final class UpdatesLogReader {
    private final expo.modules.core.logging.PersistentFileLog persistentLog = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.logging.UpdatesLogReader.Companion Companion = null;
    private static final int ONE_DAY_MILLISECONDS = 86400;
    
    public UpdatesLogReader(@org.jetbrains.annotations.NotNull
    android.content.Context context) {
        super();
    }
    
    /**
     * Purge expo-updates logs older than the given date
     */
    public final void purgeLogEntries(@org.jetbrains.annotations.NotNull
    java.util.Date olderThan, @org.jetbrains.annotations.NotNull
    kotlin.jvm.functions.Function1<? super java.lang.Error, kotlin.Unit> completionHandler) {
    }
    
    /**
     * Get expo-updates logs newer than the given date
     * Returns a list of strings in the JSON format of UpdatesLogEntry
     */
    @org.jetbrains.annotations.NotNull
    public final java.util.List<java.lang.String> getLogEntries(@org.jetbrains.annotations.NotNull
    java.util.Date newerThan) {
        return null;
    }
    
    private final boolean isEntryStringLaterThanTimestamp(java.lang.String entryString, long timestamp) {
        return false;
    }
    
    private final long epochFromDateOrOneDayAgo(java.util.Date date) {
        return 0L;
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0012\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\b\n\u0000\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082T\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0005"}, d2 = {"Lexpo/modules/updates/logging/UpdatesLogReader$Companion;", "", "()V", "ONE_DAY_MILLISECONDS", "", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}
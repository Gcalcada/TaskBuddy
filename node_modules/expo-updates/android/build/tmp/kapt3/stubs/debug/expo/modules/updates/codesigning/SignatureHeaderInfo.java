package expo.modules.updates.codesigning;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000*\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0003\b\u0086\b\u0018\u0000 \u00172\u00020\u0001:\u0001\u0017B\u001d\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0003\u0012\u0006\u0010\u0005\u001a\u00020\u0006\u00a2\u0006\u0002\u0010\u0007J\t\u0010\r\u001a\u00020\u0003H\u00c6\u0003J\t\u0010\u000e\u001a\u00020\u0003H\u00c6\u0003J\t\u0010\u000f\u001a\u00020\u0006H\u00c6\u0003J\'\u0010\u0010\u001a\u00020\u00002\b\b\u0002\u0010\u0002\u001a\u00020\u00032\b\b\u0002\u0010\u0004\u001a\u00020\u00032\b\b\u0002\u0010\u0005\u001a\u00020\u0006H\u00c6\u0001J\u0013\u0010\u0011\u001a\u00020\u00122\b\u0010\u0013\u001a\u0004\u0018\u00010\u0001H\u00d6\u0003J\t\u0010\u0014\u001a\u00020\u0015H\u00d6\u0001J\t\u0010\u0016\u001a\u00020\u0003H\u00d6\u0001R\u0011\u0010\u0005\u001a\u00020\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b\b\u0010\tR\u0011\u0010\u0004\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\n\u0010\u000bR\u0011\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\f\u0010\u000b\u00a8\u0006\u0018"}, d2 = {"Lexpo/modules/updates/codesigning/SignatureHeaderInfo;", "", "signature", "", "keyId", "algorithm", "Lexpo/modules/updates/codesigning/CodeSigningAlgorithm;", "(Ljava/lang/String;Ljava/lang/String;Lexpo/modules/updates/codesigning/CodeSigningAlgorithm;)V", "getAlgorithm", "()Lexpo/modules/updates/codesigning/CodeSigningAlgorithm;", "getKeyId", "()Ljava/lang/String;", "getSignature", "component1", "component2", "component3", "copy", "equals", "", "other", "hashCode", "", "toString", "Companion", "expo-updates_debug"})
public final class SignatureHeaderInfo {
    @org.jetbrains.annotations.NotNull
    private final java.lang.String signature = null;
    @org.jetbrains.annotations.NotNull
    private final java.lang.String keyId = null;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.updates.codesigning.CodeSigningAlgorithm algorithm = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.codesigning.SignatureHeaderInfo.Companion Companion = null;
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.updates.codesigning.SignatureHeaderInfo copy(@org.jetbrains.annotations.NotNull
    java.lang.String signature, @org.jetbrains.annotations.NotNull
    java.lang.String keyId, @org.jetbrains.annotations.NotNull
    expo.modules.updates.codesigning.CodeSigningAlgorithm algorithm) {
        return null;
    }
    
    @java.lang.Override
    public boolean equals(@org.jetbrains.annotations.Nullable
    java.lang.Object other) {
        return false;
    }
    
    @java.lang.Override
    public int hashCode() {
        return 0;
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.lang.String toString() {
        return null;
    }
    
    public SignatureHeaderInfo(@org.jetbrains.annotations.NotNull
    java.lang.String signature, @org.jetbrains.annotations.NotNull
    java.lang.String keyId, @org.jetbrains.annotations.NotNull
    expo.modules.updates.codesigning.CodeSigningAlgorithm algorithm) {
        super();
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String component1() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String getSignature() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String component2() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String getKeyId() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.updates.codesigning.CodeSigningAlgorithm component3() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.updates.codesigning.CodeSigningAlgorithm getAlgorithm() {
        return null;
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0018\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010\u0003\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u0006\u00a8\u0006\u0007"}, d2 = {"Lexpo/modules/updates/codesigning/SignatureHeaderInfo$Companion;", "", "()V", "parseSignatureHeader", "Lexpo/modules/updates/codesigning/SignatureHeaderInfo;", "signatureHeader", "", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.codesigning.SignatureHeaderInfo parseSignatureHeader(@org.jetbrains.annotations.NotNull
        java.lang.String signatureHeader) {
            return null;
        }
    }
}
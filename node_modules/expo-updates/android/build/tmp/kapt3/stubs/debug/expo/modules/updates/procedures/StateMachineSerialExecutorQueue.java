package expo.modules.updates.procedures;

import java.lang.System;

/**
 * A serial task queue, where each task is an asynchronous task. Guarantees that all queued tasks
 * are run sequentially.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000.\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\u0018\u00002\u00020\u0001:\u0001\u000eB\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\b\u0010\t\u001a\u00020\nH\u0002J\u000e\u0010\u000b\u001a\u00020\n2\u0006\u0010\f\u001a\u00020\rR\u0010\u0010\u0005\u001a\u0004\u0018\u00010\u0006X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0007\u001a\b\u0012\u0004\u0012\u00020\u00060\bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u000f"}, d2 = {"Lexpo/modules/updates/procedures/StateMachineSerialExecutorQueue;", "", "stateMachineProcedureContext", "Lexpo/modules/updates/procedures/StateMachineProcedure$StateMachineProcedureContext;", "(Lexpo/modules/updates/procedures/StateMachineProcedure$StateMachineProcedureContext;)V", "currentMethodInvocation", "Lexpo/modules/updates/procedures/StateMachineSerialExecutorQueue$MethodInvocationHolder;", "internalQueue", "Lkotlin/collections/ArrayDeque;", "maybeProcessQueue", "", "queueExecution", "stateMachineProcedure", "Lexpo/modules/updates/procedures/StateMachineProcedure;", "MethodInvocationHolder", "expo-updates_debug"})
public final class StateMachineSerialExecutorQueue {
    private final expo.modules.updates.procedures.StateMachineProcedure.StateMachineProcedureContext stateMachineProcedureContext = null;
    private final kotlin.collections.ArrayDeque<expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder> internalQueue = null;
    private expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder currentMethodInvocation;
    
    public StateMachineSerialExecutorQueue(@org.jetbrains.annotations.NotNull
    expo.modules.updates.procedures.StateMachineProcedure.StateMachineProcedureContext stateMachineProcedureContext) {
        super();
    }
    
    /**
     * Queue a procedure for execution.
     */
    public final void queueExecution(@org.jetbrains.annotations.NotNull
    expo.modules.updates.procedures.StateMachineProcedure stateMachineProcedure) {
    }
    
    @kotlin.jvm.Synchronized
    private final synchronized void maybeProcessQueue() {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000:\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000e\n\u0000\b\u0082\b\u0018\u00002\u00020\u0001B&\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0017\u0010\u0004\u001a\u0013\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\u00060\u0005\u00a2\u0006\u0002\b\u0007\u00a2\u0006\u0002\u0010\bJ\t\u0010\r\u001a\u00020\u0003H\u00c6\u0003J\u001a\u0010\u000e\u001a\u0013\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\u00060\u0005\u00a2\u0006\u0002\b\u0007H\u00c6\u0003J.\u0010\u000f\u001a\u00020\u00002\b\b\u0002\u0010\u0002\u001a\u00020\u00032\u0019\b\u0002\u0010\u0004\u001a\u0013\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\u00060\u0005\u00a2\u0006\u0002\b\u0007H\u00c6\u0001J\u0013\u0010\u0010\u001a\u00020\u00112\b\u0010\u0012\u001a\u0004\u0018\u00010\u0001H\u00d6\u0003J\u000e\u0010\u0013\u001a\u00020\u00062\u0006\u0010\u0014\u001a\u00020\u0015J\t\u0010\u0016\u001a\u00020\u0017H\u00d6\u0001J\t\u0010\u0018\u001a\u00020\u0019H\u00d6\u0001R\"\u0010\u0004\u001a\u0013\u0012\u0004\u0012\u00020\u0000\u0012\u0004\u0012\u00020\u00060\u0005\u00a2\u0006\u0002\b\u0007\u00a2\u0006\b\n\u0000\u001a\u0004\b\t\u0010\nR\u0011\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u000b\u0010\f\u00a8\u0006\u001a"}, d2 = {"Lexpo/modules/updates/procedures/StateMachineSerialExecutorQueue$MethodInvocationHolder;", "", "procedure", "Lexpo/modules/updates/procedures/StateMachineProcedure;", "onMethodInvocationComplete", "Lkotlin/Function1;", "", "Lkotlin/ExtensionFunctionType;", "(Lexpo/modules/updates/procedures/StateMachineProcedure;Lkotlin/jvm/functions/Function1;)V", "getOnMethodInvocationComplete", "()Lkotlin/jvm/functions/Function1;", "getProcedure", "()Lexpo/modules/updates/procedures/StateMachineProcedure;", "component1", "component2", "copy", "equals", "", "other", "execute", "procedureContext", "Lexpo/modules/updates/procedures/StateMachineProcedure$StateMachineProcedureContext;", "hashCode", "", "toString", "", "expo-updates_debug"})
    static final class MethodInvocationHolder {
        @org.jetbrains.annotations.NotNull
        private final expo.modules.updates.procedures.StateMachineProcedure procedure = null;
        @org.jetbrains.annotations.NotNull
        private final kotlin.jvm.functions.Function1<expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder, kotlin.Unit> onMethodInvocationComplete = null;
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder copy(@org.jetbrains.annotations.NotNull
        expo.modules.updates.procedures.StateMachineProcedure procedure, @org.jetbrains.annotations.NotNull
        kotlin.jvm.functions.Function1<? super expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder, kotlin.Unit> onMethodInvocationComplete) {
            return null;
        }
        
        @java.lang.Override
        public boolean equals(@org.jetbrains.annotations.Nullable
        java.lang.Object other) {
            return false;
        }
        
        @java.lang.Override
        public int hashCode() {
            return 0;
        }
        
        @org.jetbrains.annotations.NotNull
        @java.lang.Override
        public java.lang.String toString() {
            return null;
        }
        
        public MethodInvocationHolder(@org.jetbrains.annotations.NotNull
        expo.modules.updates.procedures.StateMachineProcedure procedure, @org.jetbrains.annotations.NotNull
        kotlin.jvm.functions.Function1<? super expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder, kotlin.Unit> onMethodInvocationComplete) {
            super();
        }
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.procedures.StateMachineProcedure component1() {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.procedures.StateMachineProcedure getProcedure() {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final kotlin.jvm.functions.Function1<expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder, kotlin.Unit> component2() {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final kotlin.jvm.functions.Function1<expo.modules.updates.procedures.StateMachineSerialExecutorQueue.MethodInvocationHolder, kotlin.Unit> getOnMethodInvocationComplete() {
            return null;
        }
        
        public final void execute(@org.jetbrains.annotations.NotNull
        expo.modules.updates.procedures.StateMachineProcedure.StateMachineProcedureContext procedureContext) {
        }
    }
}
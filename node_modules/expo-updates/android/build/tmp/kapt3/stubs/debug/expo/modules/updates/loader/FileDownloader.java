package expo.modules.updates.loader;

import java.lang.System;

/**
 * Utility class that holds all the logic for downloading data and files, such as update manifests
 * and assets, using an instance of [OkHttpClient].
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u009e\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\b\b\u0016\u0018\u0000 :2\u00020\u0001:\u00069:;<=>B\u000f\b\u0016\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004B\u0015\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0005\u001a\u00020\u0006\u00a2\u0006\u0002\u0010\u0007J0\u0010\n\u001a\u00020\u000b2\u0006\u0010\f\u001a\u00020\r2\b\u0010\u000e\u001a\u0004\u0018\u00010\u000f2\u0006\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0012\u001a\u00020\u0013J\u0016\u0010\u0014\u001a\u00020\u000b2\u0006\u0010\u0015\u001a\u00020\u00162\u0006\u0010\u0012\u001a\u00020\u0017J \u0010\u0014\u001a\u00020\u000b2\u0006\u0010\u0015\u001a\u00020\u00162\u0006\u0010\u0012\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u0019H\u0002J*\u0010\u001a\u001a\u00020\u000b2\u0006\u0010\u0015\u001a\u00020\u00162\b\u0010\u001b\u001a\u0004\u0018\u00010\u001c2\u0006\u0010\u001d\u001a\u00020\u000f2\u0006\u0010\u0012\u001a\u00020\u001eH\u0002J(\u0010\u001f\u001a\u00020\u000b2\u0006\u0010\u0010\u001a\u00020\u00112\b\u0010 \u001a\u0004\u0018\u00010!2\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0012\u001a\u00020\"J*\u0010#\u001a\u00020\u000b2\u0006\u0010$\u001a\u00020%2\b\u0010&\u001a\u0004\u0018\u00010\u001c2\u0006\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020\'H\u0002J\u0010\u0010(\u001a\u00020)2\u0006\u0010*\u001a\u00020\u001cH\u0002J4\u0010+\u001a\u00020\u000b2\u0006\u0010,\u001a\u00020%2\b\u0010-\u001a\u0004\u0018\u00010!2\b\u0010&\u001a\u0004\u0018\u00010\u001c2\u0006\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020.H\u0002J0\u0010/\u001a\u00020\u000b2\u0006\u00100\u001a\u0002012\u0006\u00102\u001a\u0002032\u0006\u00104\u001a\u00020\u001c2\u0006\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020\"H\u0002J%\u00105\u001a\u00020\u000b2\u0006\u00106\u001a\u0002072\u0006\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020\"H\u0000\u00a2\u0006\u0002\b8R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006?"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader;", "", "context", "Landroid/content/Context;", "(Landroid/content/Context;)V", "client", "Lokhttp3/OkHttpClient;", "(Landroid/content/Context;Lokhttp3/OkHttpClient;)V", "logger", "Lexpo/modules/updates/logging/UpdatesLogger;", "downloadAsset", "", "asset", "Lexpo/modules/updates/db/entity/AssetEntity;", "destinationDirectory", "Ljava/io/File;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "callback", "Lexpo/modules/updates/loader/FileDownloader$AssetDownloadCallback;", "downloadData", "request", "Lokhttp3/Request;", "Lokhttp3/Callback;", "isRetry", "", "downloadFileAndVerifyHashAndWriteToPath", "expectedBase64URLEncodedSHA256Hash", "", "destination", "Lexpo/modules/updates/loader/FileDownloader$FileDownloadCallback;", "downloadRemoteUpdate", "extraHeaders", "Lorg/json/JSONObject;", "Lexpo/modules/updates/loader/FileDownloader$RemoteUpdateDownloadCallback;", "parseDirective", "directiveResponsePartInfo", "Lexpo/modules/updates/manifest/ResponsePartInfo;", "certificateChainFromManifestResponse", "Lexpo/modules/updates/loader/FileDownloader$ParseDirectiveCallback;", "parseHeaders", "Lokhttp3/Headers;", "text", "parseManifest", "manifestResponseInfo", "extensions", "Lexpo/modules/updates/loader/FileDownloader$ParseManifestCallback;", "parseMultipartRemoteUpdateResponse", "responseBody", "Lokhttp3/ResponseBody;", "responseHeaderData", "Lexpo/modules/updates/manifest/ResponseHeaderData;", "boundary", "parseRemoteUpdateResponse", "response", "Lokhttp3/Response;", "parseRemoteUpdateResponse$expo_updates_debug", "AssetDownloadCallback", "Companion", "FileDownloadCallback", "ParseDirectiveCallback", "ParseManifestCallback", "RemoteUpdateDownloadCallback", "expo-updates_debug"})
public class FileDownloader {
    private final okhttp3.OkHttpClient client = null;
    private final expo.modules.updates.logging.UpdatesLogger logger = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.loader.FileDownloader.Companion Companion = null;
    private static final java.lang.String TAG = null;
    private static final java.lang.String CRLF = "\r\n";
    
    public FileDownloader(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    okhttp3.OkHttpClient client) {
        super();
    }
    
    public FileDownloader(@org.jetbrains.annotations.NotNull
    android.content.Context context) {
        super();
    }
    
    private final void downloadFileAndVerifyHashAndWriteToPath(okhttp3.Request request, java.lang.String expectedBase64URLEncodedSHA256Hash, java.io.File destination, expo.modules.updates.loader.FileDownloader.FileDownloadCallback callback) {
    }
    
    public final void parseRemoteUpdateResponse$expo_updates_debug(@org.jetbrains.annotations.NotNull
    okhttp3.Response response, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.RemoteUpdateDownloadCallback callback) {
    }
    
    private final okhttp3.Headers parseHeaders(java.lang.String text) {
        return null;
    }
    
    private final void parseMultipartRemoteUpdateResponse(okhttp3.ResponseBody responseBody, expo.modules.updates.manifest.ResponseHeaderData responseHeaderData, java.lang.String boundary, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.loader.FileDownloader.RemoteUpdateDownloadCallback callback) {
    }
    
    private final void parseDirective(expo.modules.updates.manifest.ResponsePartInfo directiveResponsePartInfo, java.lang.String certificateChainFromManifestResponse, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.loader.FileDownloader.ParseDirectiveCallback callback) {
    }
    
    private final void parseManifest(expo.modules.updates.manifest.ResponsePartInfo manifestResponseInfo, org.json.JSONObject extensions, java.lang.String certificateChainFromManifestResponse, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.loader.FileDownloader.ParseManifestCallback callback) {
    }
    
    public final void downloadRemoteUpdate(@org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.Nullable
    org.json.JSONObject extraHeaders, @org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.RemoteUpdateDownloadCallback callback) {
    }
    
    public final void downloadAsset(@org.jetbrains.annotations.NotNull
    expo.modules.updates.db.entity.AssetEntity asset, @org.jetbrains.annotations.Nullable
    java.io.File destinationDirectory, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.AssetDownloadCallback callback) {
    }
    
    public final void downloadData(@org.jetbrains.annotations.NotNull
    okhttp3.Request request, @org.jetbrains.annotations.NotNull
    okhttp3.Callback callback) {
    }
    
    private final void downloadData(okhttp3.Request request, okhttp3.Callback callback, boolean isRetry) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0012\n\u0000\bf\u0018\u00002\u00020\u0001J\u0014\u0010\u0002\u001a\u00020\u00032\n\u0010\u0004\u001a\u00060\u0005j\u0002`\u0006H&J\u0018\u0010\u0007\u001a\u00020\u00032\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00020\u000bH&\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$FileDownloadCallback;", "", "onFailure", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onSuccess", "file", "Ljava/io/File;", "hash", "", "expo-updates_debug"})
    public static abstract interface FileDownloadCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.Exception e);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        java.io.File file, @org.jetbrains.annotations.NotNull
        byte[] hash);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J\u001c\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\n\u0010\u0006\u001a\u00060\u0007j\u0002`\bH&J\u0010\u0010\t\u001a\u00020\u00032\u0006\u0010\n\u001a\u00020\u000bH&\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$RemoteUpdateDownloadCallback;", "", "onFailure", "", "message", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onSuccess", "updateResponse", "Lexpo/modules/updates/loader/UpdateResponse;", "expo-updates_debug"})
    public static abstract interface RemoteUpdateDownloadCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.String message, @org.jetbrains.annotations.NotNull
        java.lang.Exception e);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.UpdateResponse updateResponse);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0000\bf\u0018\u00002\u00020\u0001J\u001c\u0010\u0002\u001a\u00020\u00032\n\u0010\u0004\u001a\u00060\u0005j\u0002`\u00062\u0006\u0010\u0007\u001a\u00020\bH&J\u0018\u0010\t\u001a\u00020\u00032\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\n\u001a\u00020\u000bH&\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$AssetDownloadCallback;", "", "onFailure", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "assetEntity", "Lexpo/modules/updates/db/entity/AssetEntity;", "onSuccess", "isNew", "", "expo-updates_debug"})
    public static abstract interface AssetDownloadCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.Exception e, @org.jetbrains.annotations.NotNull
        expo.modules.updates.db.entity.AssetEntity assetEntity);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        expo.modules.updates.db.entity.AssetEntity assetEntity, boolean isNew);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J\u001c\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\n\u0010\u0006\u001a\u00060\u0007j\u0002`\bH&J\u0010\u0010\t\u001a\u00020\u00032\u0006\u0010\n\u001a\u00020\u000bH&\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$ParseDirectiveCallback;", "", "onFailure", "", "message", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onSuccess", "directiveUpdateResponsePart", "Lexpo/modules/updates/loader/UpdateResponsePart$DirectiveUpdateResponsePart;", "expo-updates_debug"})
    public static abstract interface ParseDirectiveCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.String message, @org.jetbrains.annotations.NotNull
        java.lang.Exception e);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.UpdateResponsePart.DirectiveUpdateResponsePart directiveUpdateResponsePart);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000(\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J\u001c\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\n\u0010\u0006\u001a\u00060\u0007j\u0002`\bH&J\u0010\u0010\t\u001a\u00020\u00032\u0006\u0010\n\u001a\u00020\u000bH&\u00a8\u0006\f"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$ParseManifestCallback;", "", "onFailure", "", "message", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onSuccess", "manifestUpdateResponsePart", "Lexpo/modules/updates/loader/UpdateResponsePart$ManifestUpdateResponsePart;", "expo-updates_debug"})
    public static abstract interface ParseManifestCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.String message, @org.jetbrains.annotations.NotNull
        java.lang.Exception e);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.UpdateResponsePart.ManifestUpdateResponsePart manifestUpdateResponsePart);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0080\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\\\u0010\u0007\u001a\u00020\b2\u0006\u0010\t\u001a\u00020\u00042\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\f\u001a\u00020\r2\u0006\u0010\u000e\u001a\u00020\u000f2\b\u0010\u0010\u001a\u0004\u0018\u00010\u000b2\b\u0010\u0011\u001a\u0004\u0018\u00010\u00042\u0006\u0010\u0012\u001a\u00020\u00132\u0006\u0010\u0014\u001a\u00020\u00152\u0006\u0010\u0016\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u0019H\u0002J%\u0010\u001a\u001a\u00020\u001b2\u0006\u0010\u001c\u001a\u00020\u001d2\u0006\u0010\u0014\u001a\u00020\u00152\u0006\u0010\u001e\u001a\u00020\u001fH\u0000\u00a2\u0006\u0002\b J\'\u0010!\u001a\u00020\u001b2\u0006\u0010\u0014\u001a\u00020\u00152\b\u0010\"\u001a\u0004\u0018\u00010\u000b2\u0006\u0010\u001e\u001a\u00020\u001fH\u0000\u00a2\u0006\u0002\b#J\u0018\u0010$\u001a\u00020\u000b2\u0006\u0010%\u001a\u00020\u00042\u0006\u0010\u0014\u001a\u00020\u0015H\u0002J\u0010\u0010&\u001a\u00020\'2\u0006\u0010\u001e\u001a\u00020\u001fH\u0002J\u0010\u0010(\u001a\u00020)2\u0006\u0010\u001e\u001a\u00020\u001fH\u0002J*\u0010*\u001a\u00020\u000b2\u0006\u0010+\u001a\u00020,2\u0006\u0010\u0014\u001a\u00020\u00152\b\u0010-\u001a\u0004\u0018\u00010.2\b\u0010/\u001a\u0004\u0018\u00010.J\u0016\u00100\u001a\u000201*\u0002012\b\u00102\u001a\u0004\u0018\u00010\u000bH\u0002R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082T\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0005\u001a\n \u0006*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u00063"}, d2 = {"Lexpo/modules/updates/loader/FileDownloader$Companion;", "", "()V", "CRLF", "", "TAG", "kotlin.jvm.PlatformType", "checkCodeSigningAndCreateManifest", "", "bodyString", "preManifest", "Lorg/json/JSONObject;", "responseHeaderData", "Lexpo/modules/updates/manifest/ResponseHeaderData;", "responsePartHeaderData", "Lexpo/modules/updates/manifest/ResponsePartHeaderData;", "extensions", "certificateChainFromManifestResponse", "isVerified", "", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "logger", "Lexpo/modules/updates/logging/UpdatesLogger;", "callback", "Lexpo/modules/updates/loader/FileDownloader$ParseManifestCallback;", "createRequestForAsset", "Lokhttp3/Request;", "assetEntity", "Lexpo/modules/updates/db/entity/AssetEntity;", "context", "Landroid/content/Context;", "createRequestForAsset$expo_updates_debug", "createRequestForRemoteUpdate", "extraHeaders", "createRequestForRemoteUpdate$expo_updates_debug", "extractUpdateResponseJson", "manifestString", "getCache", "Lokhttp3/Cache;", "getCacheDirectory", "Ljava/io/File;", "getExtraHeadersForRemoteUpdateRequest", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "embeddedUpdate", "addHeadersFromJSONObject", "Lokhttp3/Request$Builder;", "headers", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        @kotlin.jvm.Throws(exceptionClasses = {java.lang.Exception.class})
        private final void checkCodeSigningAndCreateManifest(java.lang.String bodyString, org.json.JSONObject preManifest, expo.modules.updates.manifest.ResponseHeaderData responseHeaderData, expo.modules.updates.manifest.ResponsePartHeaderData responsePartHeaderData, org.json.JSONObject extensions, java.lang.String certificateChainFromManifestResponse, boolean isVerified, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.logging.UpdatesLogger logger, expo.modules.updates.loader.FileDownloader.ParseManifestCallback callback) throws java.lang.Exception {
        }
        
        @kotlin.jvm.Throws(exceptionClasses = {java.io.IOException.class})
        private final org.json.JSONObject extractUpdateResponseJson(java.lang.String manifestString, expo.modules.updates.UpdatesConfiguration configuration) throws java.io.IOException {
            return null;
        }
        
        private final okhttp3.Request.Builder addHeadersFromJSONObject(okhttp3.Request.Builder $this$addHeadersFromJSONObject, org.json.JSONObject headers) {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final okhttp3.Request createRequestForAsset$expo_updates_debug(@org.jetbrains.annotations.NotNull
        expo.modules.updates.db.entity.AssetEntity assetEntity, @org.jetbrains.annotations.NotNull
        expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
        android.content.Context context) {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final okhttp3.Request createRequestForRemoteUpdate$expo_updates_debug(@org.jetbrains.annotations.NotNull
        expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.Nullable
        org.json.JSONObject extraHeaders, @org.jetbrains.annotations.NotNull
        android.content.Context context) {
            return null;
        }
        
        private final okhttp3.Cache getCache(android.content.Context context) {
            return null;
        }
        
        private final java.io.File getCacheDirectory(android.content.Context context) {
            return null;
        }
        
        @org.jetbrains.annotations.NotNull
        public final org.json.JSONObject getExtraHeadersForRemoteUpdateRequest(@org.jetbrains.annotations.NotNull
        expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
        expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.Nullable
        expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.Nullable
        expo.modules.updates.db.entity.UpdateEntity embeddedUpdate) {
            return null;
        }
    }
}
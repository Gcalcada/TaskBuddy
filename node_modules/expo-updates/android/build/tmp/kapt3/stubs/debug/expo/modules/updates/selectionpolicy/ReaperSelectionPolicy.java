package expo.modules.updates.selectionpolicy;

import java.lang.System;

/**
 * Given a list of updates, implementations of this class should choose which of those updates to
 * automatically delete from disk and which ones to keep.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u001c\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J0\u0010\u0002\u001a\b\u0012\u0004\u0012\u00020\u00040\u00032\f\u0010\u0005\u001a\b\u0012\u0004\u0012\u00020\u00040\u00032\b\u0010\u0006\u001a\u0004\u0018\u00010\u00042\b\u0010\u0007\u001a\u0004\u0018\u00010\bH&\u00a8\u0006\t"}, d2 = {"Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicy;", "", "selectUpdatesToDelete", "", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updates", "launchedUpdate", "filters", "Lorg/json/JSONObject;", "expo-updates_debug"})
public abstract interface ReaperSelectionPolicy {
    
    @org.jetbrains.annotations.NotNull
    public abstract java.util.List<expo.modules.updates.db.entity.UpdateEntity> selectUpdatesToDelete(@org.jetbrains.annotations.NotNull
    java.util.List<expo.modules.updates.db.entity.UpdateEntity> updates, @org.jetbrains.annotations.Nullable
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.Nullable
    org.json.JSONObject filters);
}
package expo.modules.updates.db;

import java.lang.System;

/**
 * The build data stored by the configuration is subject to change when
 * a user updates the binary.
 *
 * This can lead to inconsistent update loading behavior, for
 * example: https://github.com/expo/expo/issues/14372
 *
 * This singleton wipes the updates when any of the tracked build data
 * changes. This leaves the user in the same situation as a fresh install.
 *
 * So far we only know that `releaseChannel` and
 * `requestHeaders[expo-channel-name]` are dangerous to change, but have
 * included a few more that both seem unlikely to change (so we clear
 * the updates cache rarely) and likely to
 * cause bugs when they do. The tracked fields are:
 *
 *  UPDATES_CONFIGURATION_RELEASE_CHANNEL_KEY
 *  UPDATES_CONFIGURATION_UPDATE_URL_KEY
 *
 * and all of the values in json
 *
 *  UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u00006\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\u0003\b\u00c6\u0002\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u000e\u0010\u0005\u001a\u00020\u00062\u0006\u0010\u0007\u001a\u00020\bJ\u0016\u0010\t\u001a\u00020\u00062\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\u0007\u001a\u00020\bJ\u0010\u0010\f\u001a\u00020\r2\u0006\u0010\n\u001a\u00020\u000bH\u0002J\u0018\u0010\u000e\u001a\u0004\u0018\u00010\r2\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\u000f\u001a\u00020\u0004J\u0016\u0010\u0010\u001a\u00020\u00112\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\u0012\u001a\u00020\rJ\u0016\u0010\u0013\u001a\u00020\u00062\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\n\u001a\u00020\u000bR\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u000e\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0014"}, d2 = {"Lexpo/modules/updates/db/BuildData;", "", "()V", "staticBuildDataKey", "", "clearAllUpdatesFromDatabase", "", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "ensureBuildDataIsConsistent", "updatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "getBuildDataFromConfig", "Lorg/json/JSONObject;", "getBuildDataFromDatabase", "scopeKey", "isBuildDataConsistent", "", "databaseBuildData", "setBuildDataInDatabase", "expo-updates_debug"})
public final class BuildData {
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.db.BuildData INSTANCE = null;
    private static java.lang.String staticBuildDataKey = "staticBuildData";
    
    private BuildData() {
        super();
    }
    
    public final void ensureBuildDataIsConsistent(@org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration updatesConfiguration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database) {
    }
    
    public final void clearAllUpdatesFromDatabase(@org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database) {
    }
    
    public final boolean isBuildDataConsistent(@org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration updatesConfiguration, @org.jetbrains.annotations.NotNull
    org.json.JSONObject databaseBuildData) {
        return false;
    }
    
    public final void setBuildDataInDatabase(@org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration updatesConfiguration) {
    }
    
    @org.jetbrains.annotations.Nullable
    public final org.json.JSONObject getBuildDataFromDatabase(@org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    java.lang.String scopeKey) {
        return null;
    }
    
    private final org.json.JSONObject getBuildDataFromConfig(expo.modules.updates.UpdatesConfiguration updatesConfiguration) {
        return null;
    }
}
package expo.modules.updates.loader;

import java.lang.System;

/**
 * Abstract class responsible for loading an update, enumerating the assets required for
 * it to launch, and loading them all onto disk and into SQLite.
 *
 * There are two sources from which an update can be loaded - a remote server given a URL, and the
 * application package. These correspond to the two loader subclasses.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u008a\u0001\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010 \n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\b\b&\u0018\u0000 32\u00020\u0001:\u000523456B/\b\u0004\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\b\u001a\u00020\t\u0012\u0006\u0010\n\u001a\u00020\u000b\u00a2\u0006\u0002\u0010\fJ\u0016\u0010\u001a\u001a\u00020\u001b2\f\u0010\u001c\u001a\b\u0012\u0004\u0012\u00020\u00130\u001dH\u0002J\u001c\u0010\u001e\u001a\u00020\u001b2\u0006\u0010\u001f\u001a\u00020 2\n\u0010!\u001a\u00060\"j\u0002`#H\u0002J\b\u0010$\u001a\u00020\u001bH\u0002J\u0018\u0010%\u001a\u00020\u001b2\u0006\u0010&\u001a\u00020\u00132\u0006\u0010\'\u001a\u00020(H\u0002J2\u0010)\u001a\u00020\u001b2\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010&\u001a\u00020\u00132\b\u0010\b\u001a\u0004\u0018\u00010\t2\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u000f\u001a\u00020*H$J(\u0010+\u001a\u00020\u001b2\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u000f\u001a\u00020,H$J\u0010\u0010-\u001a\u00020\u001b2\u0006\u0010.\u001a\u00020/H\u0002J\b\u00100\u001a\u00020\u001bH\u0002J\u000e\u00101\u001a\u00020\u001b2\u0006\u0010\u000f\u001a\u00020\u0010R\u000e\u0010\r\u001a\u00020\u000eX\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u000f\u001a\u0004\u0018\u00010\u0010X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0004\u001a\u00020\u0005X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0007X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00130\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0014\u001a\b\u0012\u0004\u0012\u00020\u00130\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u0015\u001a\b\u0012\u0004\u0012\u00020\u00130\u0012X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\n\u001a\u00020\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0016\u001a\u0004\u0018\u00010\u0017X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010\u0018\u001a\u0004\u0018\u00010\u0019X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u00067"}, d2 = {"Lexpo/modules/updates/loader/Loader;", "", "context", "Landroid/content/Context;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "updatesDirectory", "Ljava/io/File;", "loaderFiles", "Lexpo/modules/updates/loader/LoaderFiles;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/UpdatesDatabase;Ljava/io/File;Lexpo/modules/updates/loader/LoaderFiles;)V", "assetTotal", "", "callback", "Lexpo/modules/updates/loader/Loader$LoaderCallback;", "erroredAssetList", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "existingAssetList", "finishedAssetList", "updateEntity", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updateResponse", "Lexpo/modules/updates/loader/UpdateResponse;", "downloadAllAssets", "", "assetList", "", "finishWithError", "message", "", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "finishWithSuccess", "handleAssetDownloadCompleted", "assetEntity", "result", "Lexpo/modules/updates/loader/Loader$AssetLoadResult;", "loadAsset", "Lexpo/modules/updates/loader/FileDownloader$AssetDownloadCallback;", "loadRemoteUpdate", "Lexpo/modules/updates/loader/FileDownloader$RemoteUpdateDownloadCallback;", "processUpdateManifest", "updateManifest", "Lexpo/modules/updates/manifest/UpdateManifest;", "reset", "start", "AssetLoadResult", "Companion", "LoaderCallback", "LoaderResult", "OnUpdateResponseLoadedResult", "expo-updates_debug"})
public abstract class Loader {
    private final android.content.Context context = null;
    private final expo.modules.updates.UpdatesConfiguration configuration = null;
    private final expo.modules.updates.db.UpdatesDatabase database = null;
    private final java.io.File updatesDirectory = null;
    private final expo.modules.updates.loader.LoaderFiles loaderFiles = null;
    private expo.modules.updates.loader.UpdateResponse updateResponse;
    private expo.modules.updates.db.entity.UpdateEntity updateEntity;
    private expo.modules.updates.loader.Loader.LoaderCallback callback;
    private int assetTotal = 0;
    private java.util.List<expo.modules.updates.db.entity.AssetEntity> erroredAssetList;
    private java.util.List<expo.modules.updates.db.entity.AssetEntity> existingAssetList;
    private java.util.List<expo.modules.updates.db.entity.AssetEntity> finishedAssetList;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.loader.Loader.Companion Companion = null;
    private static final java.lang.String TAG = null;
    
    protected Loader(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.LoaderFiles loaderFiles) {
        super();
    }
    
    protected abstract void loadRemoteUpdate(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.RemoteUpdateDownloadCallback callback);
    
    protected abstract void loadAsset(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.entity.AssetEntity assetEntity, @org.jetbrains.annotations.Nullable
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.AssetDownloadCallback callback);
    
    public final void start(@org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.Loader.LoaderCallback callback) {
    }
    
    private final void reset() {
    }
    
    private final void finishWithSuccess() {
    }
    
    private final void finishWithError(java.lang.String message, java.lang.Exception e) {
    }
    
    private final void processUpdateManifest(expo.modules.updates.manifest.UpdateManifest updateManifest) {
    }
    
    private final void downloadAllAssets(java.util.List<expo.modules.updates.db.entity.AssetEntity> assetList) {
    }
    
    @kotlin.jvm.Synchronized
    private final synchronized void handleAssetDownloadCompleted(expo.modules.updates.db.entity.AssetEntity assetEntity, expo.modules.updates.loader.Loader.AssetLoadResult result) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000,\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000e\n\u0000\b\u0086\b\u0018\u00002\u00020\u0001B\u0019\u0012\b\u0010\u0002\u001a\u0004\u0018\u00010\u0003\u0012\b\u0010\u0004\u001a\u0004\u0018\u00010\u0005\u00a2\u0006\u0002\u0010\u0006J\u000b\u0010\u000b\u001a\u0004\u0018\u00010\u0003H\u00c6\u0003J\u000b\u0010\f\u001a\u0004\u0018\u00010\u0005H\u00c6\u0003J!\u0010\r\u001a\u00020\u00002\n\b\u0002\u0010\u0002\u001a\u0004\u0018\u00010\u00032\n\b\u0002\u0010\u0004\u001a\u0004\u0018\u00010\u0005H\u00c6\u0001J\u0013\u0010\u000e\u001a\u00020\u000f2\b\u0010\u0010\u001a\u0004\u0018\u00010\u0001H\u00d6\u0003J\t\u0010\u0011\u001a\u00020\u0012H\u00d6\u0001J\t\u0010\u0013\u001a\u00020\u0014H\u00d6\u0001R\u0013\u0010\u0004\u001a\u0004\u0018\u00010\u0005\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0007\u0010\bR\u0013\u0010\u0002\u001a\u0004\u0018\u00010\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\t\u0010\n\u00a8\u0006\u0015"}, d2 = {"Lexpo/modules/updates/loader/Loader$LoaderResult;", "", "updateEntity", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updateDirective", "Lexpo/modules/updates/loader/UpdateDirective;", "(Lexpo/modules/updates/db/entity/UpdateEntity;Lexpo/modules/updates/loader/UpdateDirective;)V", "getUpdateDirective", "()Lexpo/modules/updates/loader/UpdateDirective;", "getUpdateEntity", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "component1", "component2", "copy", "equals", "", "other", "hashCode", "", "toString", "", "expo-updates_debug"})
    public static final class LoaderResult {
        @org.jetbrains.annotations.Nullable
        private final expo.modules.updates.db.entity.UpdateEntity updateEntity = null;
        @org.jetbrains.annotations.Nullable
        private final expo.modules.updates.loader.UpdateDirective updateDirective = null;
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.loader.Loader.LoaderResult copy(@org.jetbrains.annotations.Nullable
        expo.modules.updates.db.entity.UpdateEntity updateEntity, @org.jetbrains.annotations.Nullable
        expo.modules.updates.loader.UpdateDirective updateDirective) {
            return null;
        }
        
        @java.lang.Override
        public boolean equals(@org.jetbrains.annotations.Nullable
        java.lang.Object other) {
            return false;
        }
        
        @java.lang.Override
        public int hashCode() {
            return 0;
        }
        
        @org.jetbrains.annotations.NotNull
        @java.lang.Override
        public java.lang.String toString() {
            return null;
        }
        
        public LoaderResult(@org.jetbrains.annotations.Nullable
        expo.modules.updates.db.entity.UpdateEntity updateEntity, @org.jetbrains.annotations.Nullable
        expo.modules.updates.loader.UpdateDirective updateDirective) {
            super();
        }
        
        @org.jetbrains.annotations.Nullable
        public final expo.modules.updates.db.entity.UpdateEntity component1() {
            return null;
        }
        
        @org.jetbrains.annotations.Nullable
        public final expo.modules.updates.db.entity.UpdateEntity getUpdateEntity() {
            return null;
        }
        
        @org.jetbrains.annotations.Nullable
        public final expo.modules.updates.loader.UpdateDirective component2() {
            return null;
        }
        
        @org.jetbrains.annotations.Nullable
        public final expo.modules.updates.loader.UpdateDirective getUpdateDirective() {
            return null;
        }
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u001e\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000b\n\u0002\b\b\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000e\n\u0000\b\u0086\b\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\t\u0010\u0007\u001a\u00020\u0003H\u00c6\u0003J\u0013\u0010\b\u001a\u00020\u00002\b\b\u0002\u0010\u0002\u001a\u00020\u0003H\u00c6\u0001J\u0013\u0010\t\u001a\u00020\u00032\b\u0010\n\u001a\u0004\u0018\u00010\u0001H\u00d6\u0003J\t\u0010\u000b\u001a\u00020\fH\u00d6\u0001J\t\u0010\r\u001a\u00020\u000eH\u00d6\u0001R\u0011\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0005\u0010\u0006\u00a8\u0006\u000f"}, d2 = {"Lexpo/modules/updates/loader/Loader$OnUpdateResponseLoadedResult;", "", "shouldDownloadManifestIfPresentInResponse", "", "(Z)V", "getShouldDownloadManifestIfPresentInResponse", "()Z", "component1", "copy", "equals", "other", "hashCode", "", "toString", "", "expo-updates_debug"})
    public static final class OnUpdateResponseLoadedResult {
        private final boolean shouldDownloadManifestIfPresentInResponse = false;
        
        @org.jetbrains.annotations.NotNull
        public final expo.modules.updates.loader.Loader.OnUpdateResponseLoadedResult copy(boolean shouldDownloadManifestIfPresentInResponse) {
            return null;
        }
        
        @java.lang.Override
        public boolean equals(@org.jetbrains.annotations.Nullable
        java.lang.Object other) {
            return false;
        }
        
        @java.lang.Override
        public int hashCode() {
            return 0;
        }
        
        @org.jetbrains.annotations.NotNull
        @java.lang.Override
        public java.lang.String toString() {
            return null;
        }
        
        public OnUpdateResponseLoadedResult(boolean shouldDownloadManifestIfPresentInResponse) {
            super();
        }
        
        public final boolean component1() {
            return false;
        }
        
        public final boolean getShouldDownloadManifestIfPresentInResponse() {
            return false;
        }
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000<\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J(\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\t\u001a\u00020\u0007H&J\u0014\u0010\n\u001a\u00020\u00032\n\u0010\u000b\u001a\u00060\fj\u0002`\rH&J\u0010\u0010\u000e\u001a\u00020\u00032\u0006\u0010\u000f\u001a\u00020\u0010H&J\u0010\u0010\u0011\u001a\u00020\u00122\u0006\u0010\u0013\u001a\u00020\u0014H&\u00a8\u0006\u0015"}, d2 = {"Lexpo/modules/updates/loader/Loader$LoaderCallback;", "", "onAssetLoaded", "", "asset", "Lexpo/modules/updates/db/entity/AssetEntity;", "successfulAssetCount", "", "failedAssetCount", "totalAssetCount", "onFailure", "e", "Ljava/lang/Exception;", "Lkotlin/Exception;", "onSuccess", "loaderResult", "Lexpo/modules/updates/loader/Loader$LoaderResult;", "onUpdateResponseLoaded", "Lexpo/modules/updates/loader/Loader$OnUpdateResponseLoadedResult;", "updateResponse", "Lexpo/modules/updates/loader/UpdateResponse;", "expo-updates_debug"})
    public static abstract interface LoaderCallback {
        
        public abstract void onFailure(@org.jetbrains.annotations.NotNull
        java.lang.Exception e);
        
        public abstract void onSuccess(@org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.Loader.LoaderResult loaderResult);
        
        /**
         * Called when an asset has either been successfully downloaded or failed to download.
         *
         * @param asset Entity representing the asset that was either just downloaded or failed
         * @param successfulAssetCount The number of assets that have so far been loaded successfully
         * (including any that were found to already exist on disk)
         * @param failedAssetCount The number of assets that have so far failed to load
         * @param totalAssetCount The total number of assets that comprise the update
         */
        public abstract void onAssetLoaded(@org.jetbrains.annotations.NotNull
        expo.modules.updates.db.entity.AssetEntity asset, int successfulAssetCount, int failedAssetCount, int totalAssetCount);
        
        /**
         * Called when a response has been downloaded. The calling class should determine whether or not
         * the RemoteLoader should continue to download the manifest in the manifest part of the update response,
         * based on (for example) whether or not it already has the update downloaded locally.
         *
         * @param updateResponse Response downloaded by Loader
         * @return true if Loader should download the manifest described in the manifest part of the update response,
         * false if not.
         */
        @org.jetbrains.annotations.NotNull
        public abstract expo.modules.updates.loader.Loader.OnUpdateResponseLoadedResult onUpdateResponseLoaded(@org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.UpdateResponse updateResponse);
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0005\b\u0082\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/loader/Loader$AssetLoadResult;", "", "(Ljava/lang/String;I)V", "FINISHED", "ALREADY_EXISTS", "ERRORED", "expo-updates_debug"})
    static enum AssetLoadResult {
        /*public static final*/ FINISHED /* = new FINISHED() */,
        /*public static final*/ ALREADY_EXISTS /* = new ALREADY_EXISTS() */,
        /*public static final*/ ERRORED /* = new ERRORED() */;
        
        AssetLoadResult() {
        }
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/loader/Loader$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}
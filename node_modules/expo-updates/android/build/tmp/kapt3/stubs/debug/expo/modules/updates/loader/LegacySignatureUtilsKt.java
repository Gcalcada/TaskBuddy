package expo.modules.updates.loader;

import java.lang.System;

@kotlin.Metadata(mv = {1, 8, 0}, k = 2, d1 = {"\u0000$\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0006\u001a0\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0006\u001a\u00020\u00012\u0006\u0010\u0007\u001a\u00020\u00012\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00020\u000bH\u0002\u001a&\u0010\f\u001a\u00020\u00032\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\r\u001a\u00020\u00012\u0006\u0010\u000e\u001a\u00020\u00012\u0006\u0010\n\u001a\u00020\u000b\u001a \u0010\u000f\u001a\u00020\u00052\u0006\u0010\u0010\u001a\u00020\u00012\u0006\u0010\u0006\u001a\u00020\u00012\u0006\u0010\u0007\u001a\u00020\u0001H\u0002\"\u000e\u0010\u0000\u001a\u00020\u0001X\u0082T\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0011"}, d2 = {"EXPO_PUBLIC_KEY_URL", "", "fetchExpoPublicKeyAndVerifyPublicRSASignature", "", "isFirstAttempt", "", "plainText", "cipherText", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "listener", "Lexpo/modules/updates/loader/RSASignatureListener;", "verifyExpoPublicRSASignature", "data", "signature", "verifyPublicRSASignature", "publicKey", "expo-updates_debug"})
public final class LegacySignatureUtilsKt {
    private static final java.lang.String EXPO_PUBLIC_KEY_URL = "https://exp.host/--/manifest-public-key";
    
    public static final void verifyExpoPublicRSASignature(@org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader fileDownloader, @org.jetbrains.annotations.NotNull
    java.lang.String data, @org.jetbrains.annotations.NotNull
    java.lang.String signature, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.RSASignatureListener listener) {
    }
    
    private static final void fetchExpoPublicKeyAndVerifyPublicRSASignature(boolean isFirstAttempt, java.lang.String plainText, java.lang.String cipherText, expo.modules.updates.loader.FileDownloader fileDownloader, expo.modules.updates.loader.RSASignatureListener listener) {
    }
    
    @kotlin.jvm.Throws(exceptionClasses = {java.security.NoSuchAlgorithmException.class, java.security.spec.InvalidKeySpecException.class, java.security.InvalidKeyException.class, java.security.SignatureException.class})
    private static final boolean verifyPublicRSASignature(java.lang.String publicKey, java.lang.String plainText, java.lang.String cipherText) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.InvalidKeyException, java.security.SignatureException {
        return false;
    }
}
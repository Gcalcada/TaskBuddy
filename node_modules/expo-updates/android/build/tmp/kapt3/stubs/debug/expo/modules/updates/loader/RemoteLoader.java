package expo.modules.updates.loader;

import java.lang.System;

/**
 * Subclass of [Loader] which handles downloading updates from a remote server.
 *
 * Unlike [EmbeddedLoader], it needs to manage file downloading. Currently, it does not skip
 * any assets, meaning all assets must be downloaded in order for the update to be considered
 * ready to launch.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000R\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\u0018\u0000 \u001b2\u00020\u0001:\u0001\u001bB9\b\u0016\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\b\u001a\u00020\t\u0012\u0006\u0010\n\u001a\u00020\u000b\u0012\b\u0010\f\u001a\u0004\u0018\u00010\r\u00a2\u0006\u0002\u0010\u000eBA\b\u0000\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\u000f\u001a\u00020\t\u0012\u0006\u0010\n\u001a\u00020\u000b\u0012\b\u0010\f\u001a\u0004\u0018\u00010\r\u0012\u0006\u0010\u0010\u001a\u00020\u0011\u00a2\u0006\u0002\u0010\u0012J2\u0010\u0013\u001a\u00020\u00142\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0015\u001a\u00020\u00162\b\u0010\n\u001a\u0004\u0018\u00010\u000b2\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0017\u001a\u00020\u0018H\u0014J(\u0010\u0019\u001a\u00020\u00142\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0017\u001a\u00020\u001aH\u0014R\u0010\u0010\f\u001a\u0004\u0018\u00010\rX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u0011X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000f\u001a\u00020\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u001c"}, d2 = {"Lexpo/modules/updates/loader/RemoteLoader;", "Lexpo/modules/updates/loader/Loader;", "context", "Landroid/content/Context;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "updatesDirectory", "Ljava/io/File;", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/UpdatesDatabase;Lexpo/modules/updates/loader/FileDownloader;Ljava/io/File;Lexpo/modules/updates/db/entity/UpdateEntity;)V", "mFileDownloader", "loaderFiles", "Lexpo/modules/updates/loader/LoaderFiles;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/UpdatesDatabase;Lexpo/modules/updates/loader/FileDownloader;Ljava/io/File;Lexpo/modules/updates/db/entity/UpdateEntity;Lexpo/modules/updates/loader/LoaderFiles;)V", "loadAsset", "", "assetEntity", "Lexpo/modules/updates/db/entity/AssetEntity;", "callback", "Lexpo/modules/updates/loader/FileDownloader$AssetDownloadCallback;", "loadRemoteUpdate", "Lexpo/modules/updates/loader/FileDownloader$RemoteUpdateDownloadCallback;", "Companion", "expo-updates_debug"})
public final class RemoteLoader extends expo.modules.updates.loader.Loader {
    private final expo.modules.updates.loader.FileDownloader mFileDownloader = null;
    private final expo.modules.updates.db.entity.UpdateEntity launchedUpdate = null;
    private final expo.modules.updates.loader.LoaderFiles loaderFiles = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.loader.RemoteLoader.Companion Companion = null;
    private static final java.lang.String TAG = null;
    
    public RemoteLoader(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader mFileDownloader, @org.jetbrains.annotations.NotNull
    java.io.File updatesDirectory, @org.jetbrains.annotations.Nullable
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.LoaderFiles loaderFiles) {
        super(null, null, null, null, null);
    }
    
    public RemoteLoader(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader fileDownloader, @org.jetbrains.annotations.NotNull
    java.io.File updatesDirectory, @org.jetbrains.annotations.Nullable
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate) {
        super(null, null, null, null, null);
    }
    
    @java.lang.Override
    protected void loadRemoteUpdate(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.RemoteUpdateDownloadCallback callback) {
    }
    
    @java.lang.Override
    protected void loadAsset(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updates.db.entity.AssetEntity assetEntity, @org.jetbrains.annotations.Nullable
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
    expo.modules.updates.loader.FileDownloader.AssetDownloadCallback callback) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000`\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\u000b\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002Je\u0010\u0006\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\f\u001a\u00020\r2\u0006\u0010\u000e\u001a\u00020\u000f2\u0006\u0010\u0010\u001a\u00020\u00112\b\u0010\u0012\u001a\u0004\u0018\u00010\u00132\u0006\u0010\u0014\u001a\u00020\u00152!\u0010\u0016\u001a\u001d\u0012\u0013\u0012\u00110\u0018\u00a2\u0006\f\b\u0019\u0012\b\b\u001a\u0012\u0004\b\b(\u001b\u0012\u0004\u0012\u00020\u00070\u0017H\u0002Jz\u0010\u001c\u001a\u00020\u00072\u0006\u0010\b\u001a\u00020\t2\u0006\u0010\n\u001a\u00020\u000b2\u0006\u0010\f\u001a\u00020\r2\u0006\u0010\u000e\u001a\u00020\u000f2\u0006\u0010\u0010\u001a\u00020\u00112\b\u0010\u0012\u001a\u0004\u0018\u00010\u00132\u0006\u0010\u001d\u001a\u00020\u001e28\u0010\u0016\u001a4\u0012\u0015\u0012\u0013\u0018\u00010\u0013\u00a2\u0006\f\b\u0019\u0012\b\b\u001a\u0012\u0004\b\b( \u0012\u0013\u0012\u00110\u0018\u00a2\u0006\f\b\u0019\u0012\b\b\u001a\u0012\u0004\b\b(\u001b\u0012\u0004\u0012\u00020\u00070\u001fR\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006!"}, d2 = {"Lexpo/modules/updates/loader/RemoteLoader$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "processRollBackToEmbeddedDirective", "", "context", "Landroid/content/Context;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "selectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "directory", "Ljava/io/File;", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updateDirective", "Lexpo/modules/updates/loader/UpdateDirective$RollBackToEmbeddedUpdateDirective;", "onComplete", "Lkotlin/Function1;", "", "Lkotlin/ParameterName;", "name", "didRollBackToEmbedded", "processSuccessLoaderResult", "loaderResult", "Lexpo/modules/updates/loader/Loader$LoaderResult;", "Lkotlin/Function2;", "availableUpdate", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        public final void processSuccessLoaderResult(@org.jetbrains.annotations.NotNull
        android.content.Context context, @org.jetbrains.annotations.NotNull
        expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull
        expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull
        expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy, @org.jetbrains.annotations.NotNull
        java.io.File directory, @org.jetbrains.annotations.Nullable
        expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.NotNull
        expo.modules.updates.loader.Loader.LoaderResult loaderResult, @org.jetbrains.annotations.NotNull
        kotlin.jvm.functions.Function2<? super expo.modules.updates.db.entity.UpdateEntity, ? super java.lang.Boolean, kotlin.Unit> onComplete) {
        }
        
        /**
         * If directive is to roll-back to the embedded update and there is an embedded update,
         * we need to update embedded update in the DB with the newer commitTime from the directive
         * so that the selection policy will choose it. That way future updates can continue to be applied
         * over this roll back, but older ones won't.
         */
        private final void processRollBackToEmbeddedDirective(android.content.Context context, expo.modules.updates.UpdatesConfiguration configuration, expo.modules.updates.db.UpdatesDatabase database, expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy, java.io.File directory, expo.modules.updates.db.entity.UpdateEntity launchedUpdate, expo.modules.updates.loader.UpdateDirective.RollBackToEmbeddedUpdateDirective updateDirective, kotlin.jvm.functions.Function1<? super java.lang.Boolean, kotlin.Unit> onComplete) {
        }
    }
}
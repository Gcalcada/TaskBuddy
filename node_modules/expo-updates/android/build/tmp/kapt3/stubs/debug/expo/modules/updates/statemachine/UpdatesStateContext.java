package expo.modules.updates.statemachine;

import java.lang.System;

/**
 * The state machine context, with information intended to be consumed by application JS code.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000T\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0010$\n\u0002\u0010\u000e\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\u0011\n\u0002\u0010\b\n\u0002\b\u0003\b\u0086\b\u0018\u0000 <2\u00020\u0001:\u0001<B\u007f\u0012\b\b\u0002\u0010\u0002\u001a\u00020\u0003\u0012\b\b\u0002\u0010\u0004\u001a\u00020\u0003\u0012\b\b\u0002\u0010\u0005\u001a\u00020\u0003\u0012\b\b\u0002\u0010\u0006\u001a\u00020\u0003\u0012\b\b\u0002\u0010\u0007\u001a\u00020\u0003\u0012\n\b\u0002\u0010\b\u001a\u0004\u0018\u00010\t\u0012\n\b\u0002\u0010\n\u001a\u0004\u0018\u00010\t\u0012\n\b\u0002\u0010\u000b\u001a\u0004\u0018\u00010\f\u0012\n\b\u0002\u0010\r\u001a\u0004\u0018\u00010\u000e\u0012\n\b\u0002\u0010\u000f\u001a\u0004\u0018\u00010\u000e\u0012\n\b\u0002\u0010\u0010\u001a\u0004\u0018\u00010\u0011\u00a2\u0006\u0002\u0010\u0012J\t\u0010+\u001a\u00020\u0003H\u00c6\u0003J\u000b\u0010,\u001a\u0004\u0018\u00010\u000eH\u00c6\u0003J\u000b\u0010-\u001a\u0004\u0018\u00010\u0011H\u00c6\u0003J\t\u0010.\u001a\u00020\u0003H\u00c6\u0003J\t\u0010/\u001a\u00020\u0003H\u00c6\u0003J\t\u00100\u001a\u00020\u0003H\u00c6\u0003J\t\u00101\u001a\u00020\u0003H\u00c6\u0003J\u000b\u00102\u001a\u0004\u0018\u00010\tH\u00c6\u0003J\u000b\u00103\u001a\u0004\u0018\u00010\tH\u00c6\u0003J\u000b\u00104\u001a\u0004\u0018\u00010\fH\u00c6\u0003J\u000b\u00105\u001a\u0004\u0018\u00010\u000eH\u00c6\u0003J\u0083\u0001\u00106\u001a\u00020\u00002\b\b\u0002\u0010\u0002\u001a\u00020\u00032\b\b\u0002\u0010\u0004\u001a\u00020\u00032\b\b\u0002\u0010\u0005\u001a\u00020\u00032\b\b\u0002\u0010\u0006\u001a\u00020\u00032\b\b\u0002\u0010\u0007\u001a\u00020\u00032\n\b\u0002\u0010\b\u001a\u0004\u0018\u00010\t2\n\b\u0002\u0010\n\u001a\u0004\u0018\u00010\t2\n\b\u0002\u0010\u000b\u001a\u0004\u0018\u00010\f2\n\b\u0002\u0010\r\u001a\u0004\u0018\u00010\u000e2\n\b\u0002\u0010\u000f\u001a\u0004\u0018\u00010\u000e2\n\b\u0002\u0010\u0010\u001a\u0004\u0018\u00010\u0011H\u00c6\u0001J\u0013\u00107\u001a\u00020\u00032\b\u00108\u001a\u0004\u0018\u00010\u0001H\u00d6\u0003J\t\u00109\u001a\u00020:H\u00d6\u0001J\t\u0010;\u001a\u00020\u001fH\u00d6\u0001R\u0011\u0010\u0013\u001a\u00020\u00148F\u00a2\u0006\u0006\u001a\u0004\b\u0015\u0010\u0016R\u0013\u0010\r\u001a\u0004\u0018\u00010\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0017\u0010\u0018R\u0013\u0010\u000f\u001a\u0004\u0018\u00010\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0019\u0010\u0018R\u0013\u0010\n\u001a\u0004\u0018\u00010\t\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001a\u0010\u001bR\u0011\u0010\u0005\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0005\u0010\u001cR\u0011\u0010\u0006\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0006\u0010\u001cR\u0011\u0010\u0007\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0007\u0010\u001cR\u0011\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0002\u0010\u001cR\u0011\u0010\u0004\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0004\u0010\u001cR\u001d\u0010\u001d\u001a\u000e\u0012\u0004\u0012\u00020\u001f\u0012\u0004\u0012\u00020\u00010\u001e8F\u00a2\u0006\u0006\u001a\u0004\b \u0010!R\u0013\u0010\u0010\u001a\u0004\u0018\u00010\u0011\u00a2\u0006\b\n\u0000\u001a\u0004\b\"\u0010#R\u0013\u0010\b\u001a\u0004\u0018\u00010\t\u00a2\u0006\b\n\u0000\u001a\u0004\b$\u0010\u001bR\u0013\u0010\u000b\u001a\u0004\u0018\u00010\f\u00a2\u0006\b\n\u0000\u001a\u0004\b%\u0010&R\u0011\u0010\'\u001a\u00020(8F\u00a2\u0006\u0006\u001a\u0004\b)\u0010*\u00a8\u0006="}, d2 = {"Lexpo/modules/updates/statemachine/UpdatesStateContext;", "", "isUpdateAvailable", "", "isUpdatePending", "isChecking", "isDownloading", "isRestarting", "latestManifest", "Lorg/json/JSONObject;", "downloadedManifest", "rollback", "Lexpo/modules/updates/statemachine/UpdatesStateContextRollback;", "checkError", "Lexpo/modules/updates/statemachine/UpdatesStateError;", "downloadError", "lastCheckForUpdateTime", "Ljava/util/Date;", "(ZZZZZLorg/json/JSONObject;Lorg/json/JSONObject;Lexpo/modules/updates/statemachine/UpdatesStateContextRollback;Lexpo/modules/updates/statemachine/UpdatesStateError;Lexpo/modules/updates/statemachine/UpdatesStateError;Ljava/util/Date;)V", "bundle", "Landroid/os/Bundle;", "getBundle", "()Landroid/os/Bundle;", "getCheckError", "()Lexpo/modules/updates/statemachine/UpdatesStateError;", "getDownloadError", "getDownloadedManifest", "()Lorg/json/JSONObject;", "()Z", "json", "", "", "getJson", "()Ljava/util/Map;", "getLastCheckForUpdateTime", "()Ljava/util/Date;", "getLatestManifest", "getRollback", "()Lexpo/modules/updates/statemachine/UpdatesStateContextRollback;", "writableMap", "Lcom/facebook/react/bridge/WritableMap;", "getWritableMap", "()Lcom/facebook/react/bridge/WritableMap;", "component1", "component10", "component11", "component2", "component3", "component4", "component5", "component6", "component7", "component8", "component9", "copy", "equals", "other", "hashCode", "", "toString", "Companion", "expo-updates_debug"})
public final class UpdatesStateContext {
    private final boolean isUpdateAvailable = false;
    private final boolean isUpdatePending = false;
    private final boolean isChecking = false;
    private final boolean isDownloading = false;
    private final boolean isRestarting = false;
    @org.jetbrains.annotations.Nullable
    private final org.json.JSONObject latestManifest = null;
    @org.jetbrains.annotations.Nullable
    private final org.json.JSONObject downloadedManifest = null;
    @org.jetbrains.annotations.Nullable
    private final expo.modules.updates.statemachine.UpdatesStateContextRollback rollback = null;
    @org.jetbrains.annotations.Nullable
    private final expo.modules.updates.statemachine.UpdatesStateError checkError = null;
    @org.jetbrains.annotations.Nullable
    private final expo.modules.updates.statemachine.UpdatesStateError downloadError = null;
    @org.jetbrains.annotations.Nullable
    private final java.util.Date lastCheckForUpdateTime = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.statemachine.UpdatesStateContext.Companion Companion = null;
    @org.jetbrains.annotations.NotNull
    private static final kotlin.Lazy DATE_FORMATTER$delegate = null;
    
    /**
     * The state machine context, with information intended to be consumed by application JS code.
     */
    @org.jetbrains.annotations.NotNull
    public final expo.modules.updates.statemachine.UpdatesStateContext copy(boolean isUpdateAvailable, boolean isUpdatePending, boolean isChecking, boolean isDownloading, boolean isRestarting, @org.jetbrains.annotations.Nullable
    org.json.JSONObject latestManifest, @org.jetbrains.annotations.Nullable
    org.json.JSONObject downloadedManifest, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateContextRollback rollback, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateError checkError, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateError downloadError, @org.jetbrains.annotations.Nullable
    java.util.Date lastCheckForUpdateTime) {
        return null;
    }
    
    /**
     * The state machine context, with information intended to be consumed by application JS code.
     */
    @java.lang.Override
    public boolean equals(@org.jetbrains.annotations.Nullable
    java.lang.Object other) {
        return false;
    }
    
    /**
     * The state machine context, with information intended to be consumed by application JS code.
     */
    @java.lang.Override
    public int hashCode() {
        return 0;
    }
    
    /**
     * The state machine context, with information intended to be consumed by application JS code.
     */
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.lang.String toString() {
        return null;
    }
    
    public UpdatesStateContext() {
        super();
    }
    
    public UpdatesStateContext(boolean isUpdateAvailable, boolean isUpdatePending, boolean isChecking, boolean isDownloading, boolean isRestarting, @org.jetbrains.annotations.Nullable
    org.json.JSONObject latestManifest, @org.jetbrains.annotations.Nullable
    org.json.JSONObject downloadedManifest, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateContextRollback rollback, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateError checkError, @org.jetbrains.annotations.Nullable
    expo.modules.updates.statemachine.UpdatesStateError downloadError, @org.jetbrains.annotations.Nullable
    java.util.Date lastCheckForUpdateTime) {
        super();
    }
    
    public final boolean component1() {
        return false;
    }
    
    public final boolean isUpdateAvailable() {
        return false;
    }
    
    public final boolean component2() {
        return false;
    }
    
    public final boolean isUpdatePending() {
        return false;
    }
    
    public final boolean component3() {
        return false;
    }
    
    public final boolean isChecking() {
        return false;
    }
    
    public final boolean component4() {
        return false;
    }
    
    public final boolean isDownloading() {
        return false;
    }
    
    public final boolean component5() {
        return false;
    }
    
    public final boolean isRestarting() {
        return false;
    }
    
    @org.jetbrains.annotations.Nullable
    public final org.json.JSONObject component6() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final org.json.JSONObject getLatestManifest() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final org.json.JSONObject component7() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final org.json.JSONObject getDownloadedManifest() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateContextRollback component8() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateContextRollback getRollback() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateError component9() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateError getCheckError() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateError component10() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.statemachine.UpdatesStateError getDownloadError() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.util.Date component11() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.util.Date getLastCheckForUpdateTime() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.util.Map<java.lang.String, java.lang.Object> getJson() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final com.facebook.react.bridge.WritableMap getWritableMap() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final android.os.Bundle getBundle() {
        return null;
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u001b\u0010\u0003\u001a\u00020\u00048FX\u0086\u0084\u0002\u00a2\u0006\f\n\u0004\b\u0007\u0010\b\u001a\u0004\b\u0005\u0010\u0006\u00a8\u0006\t"}, d2 = {"Lexpo/modules/updates/statemachine/UpdatesStateContext$Companion;", "", "()V", "DATE_FORMATTER", "Ljava/text/SimpleDateFormat;", "getDATE_FORMATTER", "()Ljava/text/SimpleDateFormat;", "DATE_FORMATTER$delegate", "Lkotlin/Lazy;", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
        
        @org.jetbrains.annotations.NotNull
        public final java.text.SimpleDateFormat getDATE_FORMATTER() {
            return null;
        }
    }
}
package expo.modules.updates;

import java.lang.System;

/**
 * Main entry point to expo-updates in development builds with expo-dev-client. Similar to EnabledUpdatesController
 * in that it keeps track of updates state, but provides capabilities that are not usually exposed but
 * that expo-dev-client needs (launching and downloading a specific
 * update by URL, allowing dynamic configuration, introspecting the database). The behavior of this
 * class differs enough that it is implemented independently from EnabledUpdatesController.
 *
 * Implements the external UpdatesInterface from the expo-updates-interface package. This allows
 * expo-dev-client to compile without needing expo-updates to be installed.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u00ba\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010$\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u000e\u0018\u00002\u00020\u00012\u00020\u0002:\u0001YBA\u0012\u0006\u0010\u0003\u001a\u00020\u0004\u0012\b\u0010\u0005\u001a\u0004\u0018\u00010\u0006\u0012\b\u0010\u0007\u001a\u0004\u0018\u00010\b\u0012\u000e\u0010\t\u001a\n\u0018\u00010\nj\u0004\u0018\u0001`\u000b\u0012\u0006\u0010\f\u001a\u00020\r\u0012\u0006\u0010\u000e\u001a\u00020\u000f\u00a2\u0006\u0002\u0010\u0010J\u0016\u00103\u001a\u0002042\f\u00105\u001a\b\u0012\u0004\u0012\u00020706H\u0016J\u0016\u00108\u001a\u0002042\f\u00105\u001a\b\u0012\u0004\u0012\u00020906H\u0016J<\u0010:\u001a\u0002042\"\u0010;\u001a\u001e\u0012\u0004\u0012\u00020\u0012\u0012\u0004\u0012\u00020=0<j\u000e\u0012\u0004\u0012\u00020\u0012\u0012\u0004\u0012\u00020=`>2\u0006\u0010\u0003\u001a\u00020\u00042\u0006\u00105\u001a\u00020?H\u0016J\b\u0010@\u001a\u00020AH\u0016J\b\u0010B\u001a\u00020CH\u0002J\u0016\u0010D\u001a\u0002042\f\u00105\u001a\b\u0012\u0004\u0012\u00020E06H\u0016J\u0016\u0010F\u001a\u0002042\f\u00105\u001a\b\u0012\u0004\u0012\u00020G06H\u0016J(\u0010H\u001a\u0002042\u0006\u0010I\u001a\u00020!2\u0006\u0010;\u001a\u00020\u00062\u0006\u0010\u0003\u001a\u00020\u00042\u0006\u00105\u001a\u00020?H\u0002J\u0010\u0010J\u001a\u0002042\u0006\u0010K\u001a\u00020LH\u0016J\u0016\u0010M\u001a\u0002042\f\u00105\u001a\b\u0012\u0004\u0012\u00020406H\u0016J\b\u0010N\u001a\u000204H\u0002J\b\u0010O\u001a\u000204H\u0016J\b\u0010P\u001a\u000204H\u0002J\b\u0010Q\u001a\u000204H\u0002J\u0010\u0010R\u001a\u0002042\u0006\u0010-\u001a\u00020\u0018H\u0002J\b\u0010S\u001a\u000204H\u0002J(\u0010T\u001a\u0002042\u0006\u0010U\u001a\u00020\u00122\b\u0010V\u001a\u0004\u0018\u00010\u00122\f\u00105\u001a\b\u0012\u0004\u0012\u00020406H\u0016J\u0012\u0010W\u001a\u0002042\b\u0010-\u001a\u0004\u0018\u00010\u0018H\u0002J\b\u0010X\u001a\u000204H\u0016R\u0014\u0010\u0011\u001a\u00020\u00128VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0013\u0010\u0014R\u000e\u0010\u000e\u001a\u00020\u000fX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\u0016X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\u0018X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0019\u001a\u00020\u001aX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u001b\u001a\u00020\rX\u0096\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001b\u0010\u001cR\u000e\u0010\f\u001a\u00020\rX\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u0014\u0010\u001d\u001a\u00020\r8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b\u001d\u0010\u001cR\u0014\u0010\u001e\u001a\u00020\u00128VX\u0096\u0004\u00a2\u0006\u0006\u001a\u0004\b\u001f\u0010\u0014R\u0013\u0010 \u001a\u0004\u0018\u00010!8F\u00a2\u0006\u0006\u001a\u0004\b\"\u0010#R\u0010\u0010$\u001a\u0004\u0018\u00010%X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\"\u0010&\u001a\u0010\u0012\u0004\u0012\u00020(\u0012\u0004\u0012\u00020\u0012\u0018\u00010\'8BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b)\u0010*R\u0010\u0010+\u001a\u0004\u0018\u00010\u0018X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0010\u0010,\u001a\u0004\u0018\u00010\u0006X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0014\u0010-\u001a\u00020\u00188BX\u0082\u0004\u00a2\u0006\u0006\u001a\u0004\b.\u0010/R\u0010\u00100\u001a\u0004\u0018\u00010\u0006X\u0082\u000e\u00a2\u0006\u0002\n\u0000R\u0016\u0010\u0007\u001a\u0004\u0018\u00010\bX\u0096\u0004\u00a2\u0006\b\n\u0000\u001a\u0004\b1\u00102R\u0016\u0010\t\u001a\n\u0018\u00010\nj\u0004\u0018\u0001`\u000bX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006Z"}, d2 = {"Lexpo/modules/updates/UpdatesDevLauncherController;", "Lexpo/modules/updates/IUpdatesController;", "Lexpo/modules/updatesinterface/UpdatesInterface;", "context", "Landroid/content/Context;", "initialUpdatesConfiguration", "Lexpo/modules/updates/UpdatesConfiguration;", "updatesDirectory", "Ljava/io/File;", "updatesDirectoryException", "Ljava/lang/Exception;", "Lkotlin/Exception;", "isMissingRuntimeVersion", "", "callbacks", "Lexpo/modules/updatesinterface/UpdatesInterfaceCallbacks;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Ljava/io/File;Ljava/lang/Exception;ZLexpo/modules/updatesinterface/UpdatesInterfaceCallbacks;)V", "bundleAssetName", "", "getBundleAssetName", "()Ljava/lang/String;", "databaseHolder", "Lexpo/modules/updates/db/DatabaseHolder;", "defaultSelectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "isEmergencyLaunch", "()Z", "isUsingEmbeddedAssets", "launchAssetFile", "getLaunchAssetFile", "launchedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "getLaunchedUpdate", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "launcher", "Lexpo/modules/updates/launcher/Launcher;", "localAssetFiles", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "getLocalAssetFiles", "()Ljava/util/Map;", "mSelectionPolicy", "previousUpdatesConfiguration", "selectionPolicy", "getSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "updatesConfiguration", "getUpdatesDirectory", "()Ljava/io/File;", "checkForUpdate", "", "callback", "Lexpo/modules/updates/IUpdatesController$ModuleCallback;", "Lexpo/modules/updates/IUpdatesController$CheckForUpdateResult;", "fetchUpdate", "Lexpo/modules/updates/IUpdatesController$FetchUpdateResult;", "fetchUpdateWithConfiguration", "configuration", "Ljava/util/HashMap;", "", "Lkotlin/collections/HashMap;", "Lexpo/modules/updatesinterface/UpdatesInterface$UpdateCallback;", "getConstantsForModule", "Lexpo/modules/updates/IUpdatesController$UpdatesModuleConstants;", "getDatabase", "Lexpo/modules/updates/db/UpdatesDatabase;", "getExtraParams", "Landroid/os/Bundle;", "getNativeStateMachineContext", "Lexpo/modules/updates/statemachine/UpdatesStateContext;", "launchUpdate", "update", "onDidCreateReactInstanceManager", "reactInstanceManager", "Lcom/facebook/react/ReactInstanceManager;", "relaunchReactApplicationForModule", "releaseDatabase", "reset", "resetSelectionPolicyToDefault", "runReaper", "setDefaultSelectionPolicy", "setDevelopmentSelectionPolicy", "setExtraParam", "key", "value", "setNextSelectionPolicy", "start", "NotAvailableInDevClientException", "expo-updates_debug"})
public final class UpdatesDevLauncherController implements expo.modules.updates.IUpdatesController, expo.modules.updatesinterface.UpdatesInterface {
    private final android.content.Context context = null;
    @org.jetbrains.annotations.Nullable
    private final java.io.File updatesDirectory = null;
    private final java.lang.Exception updatesDirectoryException = null;
    private final boolean isMissingRuntimeVersion = false;
    private final expo.modules.updatesinterface.UpdatesInterfaceCallbacks callbacks = null;
    private final boolean isEmergencyLaunch = false;
    private expo.modules.updates.launcher.Launcher launcher;
    private expo.modules.updates.UpdatesConfiguration previousUpdatesConfiguration;
    private expo.modules.updates.UpdatesConfiguration updatesConfiguration;
    private final expo.modules.updates.db.DatabaseHolder databaseHolder = null;
    private final expo.modules.updates.loader.FileDownloader fileDownloader = null;
    private expo.modules.updates.selectionpolicy.SelectionPolicy mSelectionPolicy;
    private expo.modules.updates.selectionpolicy.SelectionPolicy defaultSelectionPolicy;
    
    public UpdatesDevLauncherController(@org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.Nullable
    expo.modules.updates.UpdatesConfiguration initialUpdatesConfiguration, @org.jetbrains.annotations.Nullable
    java.io.File updatesDirectory, @org.jetbrains.annotations.Nullable
    java.lang.Exception updatesDirectoryException, boolean isMissingRuntimeVersion, @org.jetbrains.annotations.NotNull
    expo.modules.updatesinterface.UpdatesInterfaceCallbacks callbacks) {
        super();
    }
    
    @org.jetbrains.annotations.Nullable
    @java.lang.Override
    public java.io.File getUpdatesDirectory() {
        return null;
    }
    
    @java.lang.Override
    public boolean isEmergencyLaunch() {
        return false;
    }
    
    private final expo.modules.updates.selectionpolicy.SelectionPolicy getSelectionPolicy() {
        return null;
    }
    
    private final void setNextSelectionPolicy(expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy) {
    }
    
    private final void resetSelectionPolicyToDefault() {
    }
    
    private final void setDefaultSelectionPolicy(expo.modules.updates.selectionpolicy.SelectionPolicy selectionPolicy) {
    }
    
    @org.jetbrains.annotations.NotNull
    @kotlin.jvm.Synchronized
    @java.lang.Override
    public synchronized java.lang.String getLaunchAssetFile() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public java.lang.String getBundleAssetName() {
        return null;
    }
    
    @java.lang.Override
    public void onDidCreateReactInstanceManager(@org.jetbrains.annotations.NotNull
    com.facebook.react.ReactInstanceManager reactInstanceManager) {
    }
    
    @java.lang.Override
    public void start() {
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.db.entity.UpdateEntity getLaunchedUpdate() {
        return null;
    }
    
    private final java.util.Map<expo.modules.updates.db.entity.AssetEntity, java.lang.String> getLocalAssetFiles() {
        return null;
    }
    
    private final boolean isUsingEmbeddedAssets() {
        return false;
    }
    
    @java.lang.Override
    public void reset() {
    }
    
    /**
     * Fetch an update using a dynamically generated configuration object (including a potentially
     * different update URL than the one embedded in the build).
     */
    @java.lang.Override
    public void fetchUpdateWithConfiguration(@org.jetbrains.annotations.NotNull
    java.util.HashMap<java.lang.String, java.lang.Object> configuration, @org.jetbrains.annotations.NotNull
    android.content.Context context, @org.jetbrains.annotations.NotNull
    expo.modules.updatesinterface.UpdatesInterface.UpdateCallback callback) {
    }
    
    private final void setDevelopmentSelectionPolicy() {
    }
    
    private final void launchUpdate(expo.modules.updates.db.entity.UpdateEntity update, expo.modules.updates.UpdatesConfiguration configuration, android.content.Context context, expo.modules.updatesinterface.UpdatesInterface.UpdateCallback callback) {
    }
    
    private final expo.modules.updates.db.UpdatesDatabase getDatabase() {
        return null;
    }
    
    private final void releaseDatabase() {
    }
    
    private final void runReaper() {
    }
    
    @org.jetbrains.annotations.NotNull
    @java.lang.Override
    public expo.modules.updates.IUpdatesController.UpdatesModuleConstants getConstantsForModule() {
        return null;
    }
    
    @java.lang.Override
    public void relaunchReactApplicationForModule(@org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @java.lang.Override
    public void getNativeStateMachineContext(@org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.statemachine.UpdatesStateContext> callback) {
    }
    
    @java.lang.Override
    public void checkForUpdate(@org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.CheckForUpdateResult> callback) {
    }
    
    @java.lang.Override
    public void fetchUpdate(@org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<expo.modules.updates.IUpdatesController.FetchUpdateResult> callback) {
    }
    
    @java.lang.Override
    public void getExtraParams(@org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<android.os.Bundle> callback) {
    }
    
    @java.lang.Override
    public void setExtraParam(@org.jetbrains.annotations.NotNull
    java.lang.String key, @org.jetbrains.annotations.Nullable
    java.lang.String value, @org.jetbrains.annotations.NotNull
    expo.modules.updates.IUpdatesController.ModuleCallback<kotlin.Unit> callback) {
    }
    
    @kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000\u0012\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0002\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004\u00a8\u0006\u0005"}, d2 = {"Lexpo/modules/updates/UpdatesDevLauncherController$NotAvailableInDevClientException;", "Lexpo/modules/kotlin/exception/CodedException;", "message", "", "(Ljava/lang/String;)V", "expo-updates_debug"})
    public static final class NotAvailableInDevClientException extends expo.modules.kotlin.exception.CodedException {
        
        public NotAvailableInDevClientException(@org.jetbrains.annotations.NotNull
        java.lang.String message) {
            super(null, null, null);
        }
    }
}
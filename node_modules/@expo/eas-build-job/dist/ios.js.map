{"version":3,"file":"ios.js","sourceRoot":"","sources":["../src/ios.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAsB;AAEtB,qCASkB;AAIlB,MAAM,uBAAuB,GAAG,aAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;IAChD,yBAAyB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClD,uBAAuB,EAAE,aAAG,CAAC,MAAM,CAAC;QAClC,UAAU,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QACnC,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE;KAC5C,CAAC,CAAC,QAAQ,EAAE;CACd,CAAC,CAAC;AAOH,MAAM,sBAAsB,GAAG,aAAG,CAAC,MAAM,EAAE,CAAC,OAAO,CACjD,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,EACvB,uBAAuB,CACxB,CAAC;AAUW,QAAA,iBAAiB,GAAG;IAC/B,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,+BAA+B;IAC/B,+BAA+B;IAC/B,gCAAgC;CACxB,CAAC;AAEE,QAAA,+BAA+B,GAAqD;IAC/F,MAAM,EAAE,+BAA+B;IACvC,IAAI,EAAE,+BAA+B;CACtC,CAAC;AAaF,MAAM,wBAAwB,GAAG,aAAG,CAAC,MAAM,CAAC;IAC1C,KAAK,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,yBAAiB,CAAC;IAC/C,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE;IAClB,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE;IAClB,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE;IACrB,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE;IACrB,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE;IACtB,SAAS,EAAE,aAAG,CAAC,MAAM,EAAE;IACvB,GAAG,EAAE,kBAAS;CACf,CAAC,CAAC;AA+BU,QAAA,SAAS,GAAG,aAAG,CAAC,MAAM,CAAC;IAClC,IAAI,EAAE,aAAG,CAAC,MAAM,EAAE;SACf,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAQ,CAAC,CAAC;SACjC,QAAQ,EAAE;IACb,cAAc,EAAE,4BAAmB,CAAC,QAAQ,EAAE;IAC9C,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,iBAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IACrD,oBAAoB,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7C,cAAc,EAAE,aAAG,CAAC,MAAM,EAAE;IAC5B,OAAO,EAAE,aAAG,CAAC,MAAM,CAAC;QAClB,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE;KACtB,CAAC;IACF,OAAO,EAAE,aAAG,CAAC,MAAM,CAAC;QAClB,gBAAgB,EAAE,sBAAsB;QACxC,kBAAkB,EAAE,kBAAS;KAC9B,CAAC,CAAC,QAAQ,EAAE;IACb,kBAAkB,EAAE,wBAAwB;IAC5C,KAAK,EAAE,oBAAW,CAAC,OAAO,EAAE;IAC5B,iBAAiB,EAAE,aAAG,CAAC,OAAO,EAAE;IAChC,SAAS,EAAE,aAAG,CAAC,OAAO,EAAE;IAExB,UAAU;IACV,MAAM,EAAE,aAAG,CAAC,MAAM,EAAE;IACpB,kBAAkB,EAAE,aAAG,CAAC,MAAM,EAAE;IAChC,YAAY,EAAE,aAAG,CAAC,MAAM,EAAE;IAE1B,UAAU;IACV,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE;IAEtB,YAAY,EAAE,aAAG,CAAC,MAAM,CAAC;QACvB,eAAe,EAAE,aAAG,CAAC,MAAM,EAAE;KAC9B,CAAC;CACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["import Joi from 'joi';\n\nimport {\n  ArchiveSource,\n  ArchiveSourceSchema,\n  Env,\n  EnvSchema,\n  Platform,\n  Workflow,\n  Cache,\n  CacheSchema,\n} from './common';\n\nexport type DistributionType = 'store' | 'internal' | 'simulator';\n\nconst TargetCredentialsSchema = Joi.object().keys({\n  provisioningProfileBase64: Joi.string().required(),\n  distributionCertificate: Joi.object({\n    dataBase64: Joi.string().required(),\n    password: Joi.string().allow('').required(),\n  }).required(),\n});\n\nexport interface TargetCredentials {\n  provisioningProfileBase64: string;\n  distributionCertificate: DistributionCertificate;\n}\n\nconst BuildCredentialsSchema = Joi.object().pattern(\n  Joi.string().required(),\n  TargetCredentialsSchema\n);\n\ntype Target = string;\nexport type BuildCredentials = Record<Target, TargetCredentials>;\n\nexport interface DistributionCertificate {\n  dataBase64: string;\n  password: string;\n}\n\nexport const builderBaseImages = [\n  'default',\n  'latest',\n  'stable',\n  'macos-big-sur-11.4-xcode-12.5',\n  'macos-big-sur-11.4-xcode-13.0',\n  'macos-monterey-12.1-xcode-13.2',\n] as const;\n\nexport const sdkVersionToDefaultBuilderImage: Record<string, typeof builderBaseImages[number]> = {\n  '<=42': 'macos-big-sur-11.4-xcode-12.5',\n  '43': 'macos-big-sur-11.4-xcode-13.0',\n};\n\nexport interface BuilderEnvironment {\n  image?: typeof builderBaseImages[number];\n  node?: string;\n  yarn?: string;\n  expoCli?: string;\n  bundler?: string;\n  fastlane?: string;\n  cocoapods?: string;\n  env?: Env;\n}\n\nconst BuilderEnvironmentSchema = Joi.object({\n  image: Joi.string().valid(...builderBaseImages),\n  node: Joi.string(),\n  yarn: Joi.string(),\n  expoCli: Joi.string(),\n  bundler: Joi.string(),\n  fastlane: Joi.string(),\n  cocoapods: Joi.string(),\n  env: EnvSchema,\n});\n\nexport interface Job {\n  type: Workflow;\n  projectArchive: ArchiveSource;\n  platform: Platform.IOS;\n  projectRootDirectory: string;\n  releaseChannel?: string;\n  updates?: {\n    channel?: string;\n  };\n  secrets: {\n    buildCredentials?: BuildCredentials;\n    environmentSecrets?: Env;\n  };\n  builderEnvironment?: BuilderEnvironment;\n  cache: Cache;\n  developmentClient?: boolean;\n  simulator?: boolean;\n\n  scheme?: string;\n  buildConfiguration?: string;\n  artifactPath?: string;\n\n  username?: string;\n\n  experimental?: {\n    prebuildCommand?: string;\n  };\n}\n\nexport const JobSchema = Joi.object({\n  type: Joi.string()\n    .valid(...Object.values(Workflow))\n    .required(),\n  projectArchive: ArchiveSourceSchema.required(),\n  platform: Joi.string().valid(Platform.IOS).required(),\n  projectRootDirectory: Joi.string().required(),\n  releaseChannel: Joi.string(),\n  updates: Joi.object({\n    channel: Joi.string(),\n  }),\n  secrets: Joi.object({\n    buildCredentials: BuildCredentialsSchema,\n    environmentSecrets: EnvSchema,\n  }).required(),\n  builderEnvironment: BuilderEnvironmentSchema,\n  cache: CacheSchema.default(),\n  developmentClient: Joi.boolean(),\n  simulator: Joi.boolean(),\n\n  // generic\n  scheme: Joi.string(),\n  buildConfiguration: Joi.string(),\n  artifactPath: Joi.string(),\n\n  // managed\n  username: Joi.string(),\n\n  experimental: Joi.object({\n    prebuildCommand: Joi.string(),\n  }),\n}).oxor('releaseChannel', 'updates.channel');\n"]}
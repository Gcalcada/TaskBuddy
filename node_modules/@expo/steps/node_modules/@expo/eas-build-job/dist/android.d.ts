import Joi from 'joi';
import { ArchiveSource, Env, Platform, Workflow, Cache, EnvironmentSecret, BuildTrigger, BuildMode } from './common';
export interface Keystore {
    dataBase64: string;
    keystorePassword: string;
    keyAlias: string;
    keyPassword?: string;
}
export declare enum BuildType {
    APK = "apk",
    APP_BUNDLE = "app-bundle"
}
export interface BuilderEnvironment {
    image?: string;
    node?: string;
    pnpm?: string;
    yarn?: string;
    bun?: string;
    expoCli?: string;
    ndk?: string;
    env?: Env;
}
export interface BuildSecrets {
    buildCredentials?: {
        keystore: Keystore;
    };
    environmentSecrets?: EnvironmentSecret[];
    robotAccessToken?: string;
}
export interface Job {
    mode: BuildMode;
    type: Workflow;
    triggeredBy: BuildTrigger;
    projectArchive: ArchiveSource;
    platform: Platform.ANDROID;
    projectRootDirectory: string;
    buildProfile?: string;
    releaseChannel?: string;
    updates?: {
        channel?: string;
    };
    secrets?: BuildSecrets;
    builderEnvironment?: BuilderEnvironment;
    cache: Cache;
    developmentClient?: boolean;
    version?: {
        versionCode?: string;
        /**
         * support for this field is implemented, but specifying it is disabled on schema level
         */
        versionName?: string;
        /**
         * support for this field is implemented, but specifying it is disabled on schema level
         */
        runtimeVersion?: string;
    };
    buildArtifactPaths?: string[];
    gradleCommand?: string;
    applicationArchivePath?: string;
    buildType?: BuildType;
    username?: string;
    customBuildConfig?: {
        path: string;
    };
    experimental?: {
        prebuildCommand?: string;
    };
    expoBuildUrl?: string;
    githubTriggerOptions?: {
        autoSubmit: boolean;
        submitProfile?: string;
    };
}
export declare const JobSchema: Joi.ObjectSchema<any>;

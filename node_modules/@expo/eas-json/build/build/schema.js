"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildProfileSchema = void 0;
const tslib_1 = require("tslib");
const eas_build_job_1 = require("@expo/eas-build-job");
const joi_1 = tslib_1.__importDefault(require("joi"));
const semver_1 = tslib_1.__importDefault(require("semver"));
const CacheSchema = joi_1.default.object({
    disabled: joi_1.default.boolean(),
    key: joi_1.default.string().max(128),
    cacheDefaultPaths: joi_1.default.boolean(),
    customPaths: joi_1.default.array().items(joi_1.default.string()),
});
const CommonBuildProfileSchema = joi_1.default.object({
    credentialsSource: joi_1.default.string().valid('local', 'remote').default('remote'),
    distribution: joi_1.default.string().valid('store', 'internal').default('store'),
    cache: CacheSchema,
    releaseChannel: joi_1.default.string().regex(/^[a-z\d][a-z\d._-]*$/),
    channel: joi_1.default.string().regex(/^[a-z\d][a-z\d._-]*$/),
    developmentClient: joi_1.default.boolean(),
    prebuildCommand: joi_1.default.string(),
    node: joi_1.default.string().empty(null).custom(semverCheck),
    yarn: joi_1.default.string().empty(null).custom(semverCheck),
    expoCli: joi_1.default.string().empty(null).custom(semverCheck),
    env: joi_1.default.object().pattern(joi_1.default.string(), joi_1.default.string().empty(null)),
});
const AndroidBuildProfileSchema = CommonBuildProfileSchema.concat(joi_1.default.object({
    credentialsSource: joi_1.default.string().valid('local', 'remote'),
    distribution: joi_1.default.string().valid('store', 'internal'),
    withoutCredentials: joi_1.default.boolean(),
    image: joi_1.default.string().valid(...eas_build_job_1.Android.builderBaseImages),
    ndk: joi_1.default.string().empty(null).custom(semverCheck),
    autoIncrement: joi_1.default.alternatives().try(joi_1.default.boolean(), joi_1.default.string().valid('version', 'versionCode')),
    artifactPath: joi_1.default.string(),
    gradleCommand: joi_1.default.string(),
    buildType: joi_1.default.string().valid('apk', 'app-bundle'),
}));
const IosBuildProfileSchema = CommonBuildProfileSchema.concat(joi_1.default.object({
    credentialsSource: joi_1.default.string().valid('local', 'remote'),
    distribution: joi_1.default.string().valid('store', 'internal'),
    enterpriseProvisioning: joi_1.default.string().valid('adhoc', 'universal'),
    autoIncrement: joi_1.default.alternatives().try(joi_1.default.boolean(), joi_1.default.string().valid('version', 'buildNumber')),
    simulator: joi_1.default.boolean(),
    image: joi_1.default.string().valid(...eas_build_job_1.Ios.builderBaseImages),
    bundler: joi_1.default.string().empty(null).custom(semverCheck),
    fastlane: joi_1.default.string().empty(null).custom(semverCheck),
    cocoapods: joi_1.default.string().empty(null).custom(semverCheck),
    artifactPath: joi_1.default.string(),
    scheme: joi_1.default.string(),
    buildConfiguration: joi_1.default.string(),
}));
exports.BuildProfileSchema = CommonBuildProfileSchema.concat(joi_1.default.object({
    extends: joi_1.default.string(),
    android: AndroidBuildProfileSchema,
    ios: IosBuildProfileSchema,
}));
function semverCheck(value) {
    if (semver_1.default.valid(value)) {
        return value;
    }
    else {
        throw new Error(`${value} is not a valid version`);
    }
}

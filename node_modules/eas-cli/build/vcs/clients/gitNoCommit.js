"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const spawn_async_1 = tslib_1.__importDefault(require("@expo/spawn-async"));
const path_1 = tslib_1.__importDefault(require("path"));
const local_1 = require("../local");
const git_1 = tslib_1.__importDefault(require("./git"));
class GitNoCommitClient extends git_1.default {
    async isCommitRequiredAsync() {
        return false;
    }
    async getRootPathAsync() {
        return (await (0, spawn_async_1.default)('git', ['rev-parse', '--show-toplevel'])).stdout.trim();
    }
    async makeShallowCopyAsync(destinationPath) {
        // normalize converts C:/some/path to C:\some\path on windows
        const srcPath = path_1.default.normalize(await this.getRootPathAsync());
        await (0, local_1.makeShallowCopyAsync)(srcPath, destinationPath);
    }
    async isFileIgnoredAsync(filePath) {
        // normalize converts C:/some/path to C:\some\path on windows
        const ignore = new local_1.Ignore(await this.getRootPathAsync());
        await ignore.initIgnoreAsync();
        return ignore.ignores(filePath);
    }
}
exports.default = GitNoCommitClient;

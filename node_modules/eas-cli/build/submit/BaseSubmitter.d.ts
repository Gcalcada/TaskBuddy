import { Platform } from '@expo/eas-build-job';
import { Event } from '../analytics/events';
import { AndroidSubmissionConfigInput, IosSubmissionConfigInput, SubmissionFragment } from '../graphql/generated';
import { SubmissionContext } from './context';
export interface SubmissionInput<P extends Platform> {
    projectId: string;
    submissionConfig: P extends Platform.ANDROID ? AndroidSubmissionConfigInput : IosSubmissionConfigInput;
    buildId?: string;
}
interface AnalyticEvents {
    attemptEvent: Event;
    successEvent: Event;
    failureEvent: Event;
}
export default abstract class BaseSubmitter<P extends Platform, ResolvedSourceOptions, SubmissionOptions> {
    protected ctx: SubmissionContext<P>;
    protected options: SubmissionOptions;
    protected sourceOptionResolver: {
        [K in keyof ResolvedSourceOptions]: () => Promise<ResolvedSourceOptions[K]>;
    };
    protected sourceOptionAnalytics: Record<keyof ResolvedSourceOptions, AnalyticEvents>;
    constructor(ctx: SubmissionContext<P>, options: SubmissionOptions, sourceOptionResolver: {
        [K in keyof ResolvedSourceOptions]: () => Promise<ResolvedSourceOptions[K]>;
    }, sourceOptionAnalytics: Record<keyof ResolvedSourceOptions, AnalyticEvents>);
    private getSourceOptionsAsync;
    submitAsync(): Promise<SubmissionFragment>;
    abstract createSubmissionInputAsync(resolvedOptions: ResolvedSourceOptions): Promise<SubmissionInput<P>>;
    private createSubmissionAsync;
    private createSubmissionWithAnalyticsAsync;
    protected abstract createPlatformSubmissionAsync(input: SubmissionInput<P>): Promise<SubmissionFragment>;
}
export {};

import { Platform } from '@expo/eas-build-job';
import { AndroidSubmissionConfigInput, SubmissionFragment } from '../../graphql/generated';
import { Archive, ArchiveSource } from '../ArchiveSource';
import BaseSubmitter, { SubmissionInput } from '../BaseSubmitter';
import { SubmissionContext } from '../context';
import { ServiceAccountKeyResult, ServiceAccountSource } from './ServiceAccountSource';
export interface AndroidSubmissionOptions extends Pick<AndroidSubmissionConfigInput, 'track' | 'releaseStatus' | 'changesNotSentForReview'> {
    projectId: string;
    archiveSource: ArchiveSource;
    serviceAccountSource: ServiceAccountSource;
}
interface ResolvedSourceOptions {
    archive: Archive;
    serviceAccountKeyResult: ServiceAccountKeyResult;
}
export default class AndroidSubmitter extends BaseSubmitter<Platform.ANDROID, ResolvedSourceOptions, AndroidSubmissionOptions> {
    constructor(ctx: SubmissionContext<Platform.ANDROID>, options: AndroidSubmissionOptions);
    createSubmissionInputAsync(resolvedSourceOptions: ResolvedSourceOptions): Promise<SubmissionInput<Platform.ANDROID>>;
    protected createPlatformSubmissionAsync({ projectId, submissionConfig, buildId, }: SubmissionInput<Platform.ANDROID>): Promise<SubmissionFragment>;
    private formatSubmissionConfig;
    private prepareSummaryData;
}
export {};

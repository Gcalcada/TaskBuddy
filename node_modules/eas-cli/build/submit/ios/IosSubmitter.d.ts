import { Platform } from '@expo/eas-build-job';
import { IosSubmissionConfigInput, SubmissionFragment } from '../../graphql/generated';
import { Archive, ArchiveSource } from '../ArchiveSource';
import BaseSubmitter, { SubmissionInput } from '../BaseSubmitter';
import { SubmissionContext } from '../context';
import { AppSpecificPasswordCredentials, AppSpecificPasswordSource } from './AppSpecificPasswordSource';
import { AscApiKeyResult, AscApiKeySource } from './AscApiKeySource';
import { CredentialsServiceSource } from './CredentialsServiceSource';
export interface IosSubmissionOptions extends Pick<IosSubmissionConfigInput, 'appleIdUsername' | 'ascAppIdentifier'> {
    projectId: string;
    archiveSource: ArchiveSource;
    appSpecificPasswordSource?: AppSpecificPasswordSource;
    ascApiKeySource?: AscApiKeySource;
    credentialsServiceSource?: CredentialsServiceSource;
}
interface ResolvedSourceOptions {
    archive: Archive;
    credentials: {
        appSpecificPassword?: AppSpecificPasswordCredentials;
        ascApiKeyResult?: AscApiKeyResult;
    };
}
export default class IosSubmitter extends BaseSubmitter<Platform.IOS, ResolvedSourceOptions, IosSubmissionOptions> {
    constructor(ctx: SubmissionContext<Platform.IOS>, options: IosSubmissionOptions);
    createSubmissionInputAsync(resolvedSourceOptions: ResolvedSourceOptions): Promise<SubmissionInput<Platform.IOS>>;
    protected createPlatformSubmissionAsync({ projectId, submissionConfig, buildId, }: SubmissionInput<Platform.IOS>): Promise<SubmissionFragment>;
    private formatSubmissionConfig;
    private formatAppSpecificPassword;
    private formatAscApiKeyResult;
    private prepareSummaryData;
}
export {};

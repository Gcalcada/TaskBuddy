import { AndroidAppBuildCredentialsFragment, AndroidFcmFragment, AndroidFcmVersion, AndroidKeystoreFragment, CommonAndroidAppCredentialsFragment, GoogleServiceAccountKeyFragment } from '../../../graphql/generated';
import { Account } from '../../../user/Account';
import { GoogleServiceAccountKey, KeystoreWithType } from '../credentials';
export interface AppLookupParams {
    account: Account;
    projectName: string;
    androidApplicationIdentifier: string;
}
export declare function getAndroidAppCredentialsWithCommonFieldsAsync(appLookupParams: AppLookupParams): Promise<CommonAndroidAppCredentialsFragment | null>;
export declare function getAndroidAppBuildCredentialsListAsync(appLookupParams: AppLookupParams): Promise<AndroidAppBuildCredentialsFragment[]>;
export declare function getLegacyAndroidAppCredentialsWithCommonFieldsAsync(appLookupParams: AppLookupParams): Promise<CommonAndroidAppCredentialsFragment | null>;
export declare function getLegacyAndroidAppBuildCredentialsAsync(appLookupParams: AppLookupParams): Promise<AndroidAppBuildCredentialsFragment | null>;
export declare function createOrGetExistingAndroidAppCredentialsWithBuildCredentialsAsync(appLookupParams: AppLookupParams): Promise<CommonAndroidAppCredentialsFragment>;
export declare function updateAndroidAppCredentialsAsync(appCredentials: CommonAndroidAppCredentialsFragment, { androidFcmId, googleServiceAccountKeyForSubmissionsId, }: {
    androidFcmId?: string;
    googleServiceAccountKeyForSubmissionsId?: string;
}): Promise<CommonAndroidAppCredentialsFragment>;
export declare function updateAndroidAppBuildCredentialsAsync(buildCredentials: AndroidAppBuildCredentialsFragment, { androidKeystoreId, }: {
    androidKeystoreId: string;
}): Promise<AndroidAppBuildCredentialsFragment>;
export declare function createAndroidAppBuildCredentialsAsync(appLookupParams: AppLookupParams, { name, isDefault, androidKeystoreId, }: {
    name: string;
    isDefault: boolean;
    androidKeystoreId: string;
}): Promise<AndroidAppBuildCredentialsFragment>;
export declare function getDefaultAndroidAppBuildCredentialsAsync(appLookupParams: AppLookupParams): Promise<AndroidAppBuildCredentialsFragment | null>;
export declare function getAndroidAppBuildCredentialsByNameAsync(appLookupParams: AppLookupParams, name: string): Promise<AndroidAppBuildCredentialsFragment | null>;
export declare function createOrUpdateAndroidAppBuildCredentialsByNameAsync(appLookupParams: AppLookupParams, name: string, { androidKeystoreId, }: {
    androidKeystoreId: string;
}): Promise<AndroidAppBuildCredentialsFragment>;
export declare function createOrUpdateDefaultIosAppBuildCredentialsAsync(): Promise<void>;
export declare function createKeystoreAsync(account: Account, keystore: KeystoreWithType): Promise<AndroidKeystoreFragment>;
export declare function deleteKeystoreAsync(keystore: AndroidKeystoreFragment): Promise<void>;
export declare function createFcmAsync(account: Account, fcmApiKey: string, version: AndroidFcmVersion): Promise<AndroidFcmFragment>;
export declare function deleteFcmAsync(fcm: AndroidFcmFragment): Promise<void>;
export declare function createGoogleServiceAccountKeyAsync(account: Account, jsonKey: GoogleServiceAccountKey): Promise<GoogleServiceAccountKeyFragment>;
export declare function deleteGoogleServiceAccountKeyAsync(googleServiceAccountKey: GoogleServiceAccountKeyFragment): Promise<void>;
export declare function getGoogleServiceAccountKeysForAccountAsync(account: Account): Promise<GoogleServiceAccountKeyFragment[]>;
export declare const formatProjectFullName: ({ account, projectName }: AppLookupParams) => string;

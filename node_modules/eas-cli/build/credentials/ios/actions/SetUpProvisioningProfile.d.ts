import { AppleDistributionCertificateFragment, AppleProvisioningProfileFragment, IosAppBuildCredentialsFragment, IosDistributionType } from '../../../graphql/generated';
import { CredentialsContext } from '../../context';
import { AppLookupParams } from '../api/GraphqlClient';
/**
 * Sets up either APP_STORE or ENTERPRISE provisioning profiles
 */
export declare class SetUpProvisioningProfile {
    private app;
    private distributionType;
    constructor(app: AppLookupParams, distributionType: IosDistributionType);
    areBuildCredentialsSetupAsync(ctx: CredentialsContext): Promise<boolean>;
    assignNewAndDeleteOldProfileAsync(ctx: CredentialsContext, distCert: AppleDistributionCertificateFragment, currentProfile: AppleProvisioningProfileFragment): Promise<IosAppBuildCredentialsFragment>;
    createAndAssignProfileAsync(ctx: CredentialsContext, distCert: AppleDistributionCertificateFragment): Promise<IosAppBuildCredentialsFragment>;
    configureAndAssignProfileAsync(ctx: CredentialsContext, distCert: AppleDistributionCertificateFragment, originalProvisioningProfile: AppleProvisioningProfileFragment): Promise<IosAppBuildCredentialsFragment | null>;
    runAsync(ctx: CredentialsContext): Promise<IosAppBuildCredentialsFragment>;
    private getCurrentProfileStoreInfo;
}

import { AppleDevice, AppleDeviceFragment, AppleTeamFragment } from '../../../../../graphql/generated';
export declare type AppleDeviceFragmentWithAppleTeam = AppleDeviceFragment & {
    appleTeam: AppleTeamFragment;
};
export declare type AppleDeviceQueryResult = Pick<AppleDevice, 'id' | 'identifier' | 'name' | 'deviceClass' | 'enabled'>;
export declare type AppleDevicesByTeamIdentifierQueryResult = AppleTeamFragment & {
    appleDevices: AppleDeviceQueryResult[];
};
export declare type AppleDevicesByIdentifierQueryResult = AppleDeviceQueryResult & {
    appleTeam: AppleTeamFragment;
};
export declare const AppleDeviceQuery: {
    getAllByAppleTeamIdentifierAsync(accountId: string, appleTeamIdentifier: string, { useCache }?: {
        useCache?: boolean | undefined;
    }): Promise<AppleDeviceFragmentWithAppleTeam[]>;
    getAllForAppleTeamAsync(accountName: string, appleTeamIdentifier: string): Promise<AppleDevicesByTeamIdentifierQueryResult | null>;
    getByDeviceIdentifierAsync(accountName: string, identifier: string): Promise<AppleDevicesByIdentifierQueryResult | null>;
};

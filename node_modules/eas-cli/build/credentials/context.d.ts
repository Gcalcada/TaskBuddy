import { ExpoConfig } from '@expo/config';
import { Env } from '@expo/eas-build-job';
import { Actor } from '../user/User';
import * as AndroidGraphqlClient from './android/api/GraphqlClient';
import * as IosGraphqlClient from './ios/api/GraphqlClient';
import AppStoreApi from './ios/appstore/AppStoreApi';
export declare class CredentialsContext {
    private options;
    readonly android: typeof AndroidGraphqlClient;
    readonly appStore: AppStoreApi;
    readonly ios: typeof IosGraphqlClient;
    readonly nonInteractive: boolean;
    readonly projectDir: string;
    readonly user: Actor;
    private shouldAskAuthenticateAppStore;
    private resolvedExp?;
    constructor(options: {
        exp?: ExpoConfig;
        nonInteractive?: boolean;
        projectDir: string;
        user: Actor;
        env?: Env;
    });
    static getExpoConfigInProject(projectDir: string, { env }?: {
        env?: Env;
    }): ExpoConfig | null;
    get hasProjectContext(): boolean;
    get exp(): ExpoConfig;
    ensureProjectContext(): void;
    logOwnerAndProject(): void;
    bestEffortAppStoreAuthenticateAsync(): Promise<void>;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatNewDevice = void 0;
const tslib_1 = require("tslib");
const generated_1 = require("../../graphql/generated");
const formatFields_1 = tslib_1.__importDefault(require("../../utils/formatFields"));
const DEVICE_CLASS_DISPLAY_NAMES = {
    [generated_1.AppleDeviceClass.Iphone]: 'iPhone',
    [generated_1.AppleDeviceClass.Ipad]: 'iPad',
    [generated_1.AppleDeviceClass.Mac]: 'Mac',
    [generated_1.AppleDeviceClass.Unknown]: 'Unknown',
};
function formatDeviceClass(device) {
    if (!device.deviceClass || !DEVICE_CLASS_DISPLAY_NAMES[device.deviceClass]) {
        return 'Unknown';
    }
    return [DEVICE_CLASS_DISPLAY_NAMES[device.deviceClass], 'model' in device ? device.model : '']
        .filter(value => !!value)
        .join(' ');
}
function formatDevice(device, team) {
    var _a, _b;
    const fields = [
        { label: 'UDID', value: device.identifier },
        { label: 'Name', value: (_a = device.name) !== null && _a !== void 0 ? _a : 'Unknown' },
        {
            label: 'Class',
            value: formatDeviceClass(device),
        },
    ];
    if (team) {
        fields.push({ label: 'Apple Team ID', value: team.appleTeamIdentifier }, { label: 'Apple Team Name', value: (_b = team.appleTeamName) !== null && _b !== void 0 ? _b : 'Unknown' });
    }
    return (0, formatFields_1.default)(fields);
}
exports.default = formatDevice;
function formatNewDevice(device, team) {
    var _a, _b;
    const fields = [
        { label: 'Name', value: (_a = device.name) !== null && _a !== void 0 ? _a : '(empty)' },
        {
            label: 'Class',
            value: formatDeviceClass(device),
        },
        { label: 'UDID', value: device.identifier },
    ];
    if (team) {
        fields.push({ label: 'Apple Team ID', value: team.appleTeamIdentifier }, { label: 'Apple Team Name', value: (_b = team.appleTeamName) !== null && _b !== void 0 ? _b : 'Unknown' });
    }
    return (0, formatFields_1.default)(fields);
}
exports.formatNewDevice = formatNewDevice;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildMutation = void 0;
const tslib_1 = require("tslib");
const graphql_1 = require("graphql");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const nullthrows_1 = tslib_1.__importDefault(require("nullthrows"));
const client_1 = require("../client");
const Build_1 = require("../types/Build");
exports.BuildMutation = {
    async createAndroidBuildAsync(input) {
        var _a;
        const data = await (0, client_1.withErrorHandlingAsync)(client_1.graphqlClient
            .mutation((0, graphql_tag_1.default) `
            mutation CreateAndroidBuildMutation(
              $appId: ID!
              $job: AndroidJobInput!
              $metadata: BuildMetadataInput
            ) {
              build {
                createAndroidBuild(appId: $appId, job: $job, metadata: $metadata) {
                  build {
                    id
                    ...BuildFragment
                  }
                  deprecationInfo {
                    type
                    message
                  }
                }
              }
            }
            ${(0, graphql_1.print)(Build_1.BuildFragmentNode)}
          `, input, { noRetry: true })
            .toPromise());
        return (0, nullthrows_1.default)((_a = data.build) === null || _a === void 0 ? void 0 : _a.createAndroidBuild);
    },
    async createIosBuildAsync(input) {
        var _a;
        const data = await (0, client_1.withErrorHandlingAsync)(client_1.graphqlClient
            .mutation((0, graphql_tag_1.default) `
            mutation CreateIosBuildMutation(
              $appId: ID!
              $job: IosJobInput!
              $metadata: BuildMetadataInput
            ) {
              build {
                createIosBuild(appId: $appId, job: $job, metadata: $metadata) {
                  build {
                    id
                    ...BuildFragment
                  }
                  deprecationInfo {
                    type
                    message
                  }
                }
              }
            }
            ${(0, graphql_1.print)(Build_1.BuildFragmentNode)}
          `, input, { noRetry: true })
            .toPromise());
        return (0, nullthrows_1.default)((_a = data.build) === null || _a === void 0 ? void 0 : _a.createIosBuild);
    },
};

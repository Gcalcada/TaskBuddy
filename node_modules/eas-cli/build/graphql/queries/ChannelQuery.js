"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelQuery = void 0;
const tslib_1 = require("tslib");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const client_1 = require("../client");
exports.ChannelQuery = {
    async getUpdateChannelByNameForAppAsync({ appId, channelName, }) {
        const { app: { byId: { updateChannelByName }, }, } = await (0, client_1.withErrorHandlingAsync)(client_1.graphqlClient
            .query((0, graphql_tag_1.default) `
            query GetChannelByNameForApp($appId: String!, $channelName: String!) {
              app {
                byId(appId: $appId) {
                  id
                  updateChannelByName(name: $channelName) {
                    id
                    name
                    createdAt
                    branchMapping
                    updateBranches(offset: 0, limit: 1000) {
                      id
                      name
                      updates(offset: 0, limit: 10) {
                        id
                        group
                        message
                        runtimeVersion
                        createdAt
                        platform
                        actor {
                          id
                          ... on User {
                            username
                          }
                          ... on Robot {
                            firstName
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          `, { appId, channelName }, { additionalTypenames: ['UpdateChannel', 'UpdateBranch', 'Update'] })
            .toPromise());
        return updateChannelByName;
    },
};
